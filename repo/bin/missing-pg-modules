#!/usr/bin/perl

use strict;
use warnings;

my $oldest_pg_version = 9.2;
my $newest_pg_version = 10; # ignore 11 while it is devel

my $packages = shift || 'sid-pgdg-testing';
$packages = "dists/$packages/main/binary-amd64/Packages" unless ($packages =~ m!/!);

my %pkgs; # known binary packages
my %templates; # binary package templates, e.g. postgresql-*-debversion
my %pgversions; # all existing PostgreSQL versions

$/ = ''; # slurp paragraphs

open P, $packages or die "$packages: $!";
while (<P>) {
	my ($pkg) = /^Package: (.+)/m or die "$packages: paragraph without Package: $_";
	if ($pkg =~ /-([89]\.\d|1\d)\b/) {
		my $version = $1;
		next if ($version < $oldest_pg_version);
		next if ($version > $newest_pg_version);
		$pkgs{$pkg} = 1;
		$pkg =~ s/-([89]\.\d|1\d)\b/-*/;
		$templates{$pkg} = 1;
		$pgversions{$version} = 1;
	}
}
close P;

foreach my $template (sort keys %templates) {
	my @missing;
	foreach my $version (sort { $a <=> $b } keys %pgversions) {
		my $pkg = $template;
		$pkg =~ s/-\*/-$version/;
		next if ($pkgs{$pkg});
		push @missing, $version;
	}
	print "$template: @missing\n" if (@missing);
}
