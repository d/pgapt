#!/usr/bin/perl

use strict;
use warnings;

my $to_term = (-t 1);
# enable ansi codes if outputting to a terminal
my ($b, $r, $g, $n) = $to_term ? ("\e[1m", "\e[31m", "\e[32m", "\e[0m") : ("", "", "", "");

my $dist = shift or die "Syntax: $0 <dist>";
my $packages = "dists/$dist/main/binary-amd64/Packages.bz2";
my $sources = "dists/$dist/main/source/Sources.bz2";

$/ = ''; # slurp paragraphs

my %srcs;

open S, "bzcat $sources |" or die "$sources: $!";
while (<S>) {
	my ($pkg) = /^Package: (.+)/m or die "$sources: paragraph without Package: $_";
	my ($ver) = /^Version: (.+)/m or die "$sources: paragraph without Version: $_";
	if (exists $srcs{$pkg}) {
		print "$pkg has more than one source: $ver $srcs{$pkg}\n";
	}
	$srcs{$pkg} = $ver;
}
close S;

open P, "bzcat $packages |" or die "$packages: $!";
while (<P>) {
	my ($pkg) = /^Package: (.+)/m or die "$packages: paragraph without Package: $_";
	my ($ver) = /^Version: (.+)/m or die "$packages: paragraph without Version: $_";
	my ($src, $srcver) = ($pkg, $ver);
	if (/^Source: (\S+) \((\S+)\)$/m) {
		($src, $srcver) = ($1, $2);
	} elsif (/^Source: (\S+)$/m) {
		($src) = ($1);
	}

	if (not exists $srcs{$src}) {
		print "$r$pkg ($ver) source$n $src does not exist\n    rep remove $dist $pkg\n";
		next;
	}
	if ($srcs{$src} ne $srcver) {
		print "$b$pkg ($ver)$n source $r$src ($srcver)$n has newer version $g$srcs{$src}$n\n    sudo -u aptuser reprepro remove $dist $pkg\n";
	}
}
close P;
