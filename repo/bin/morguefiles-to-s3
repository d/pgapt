#!/bin/sh

set -eu

# directory where we keep metadata of morgue files
MORGUE=/srv/apt/morgue
MORGUEINDICES="$MORGUE/index.queue"
# S3 bucket
S3="s3://apt-archive.postgresql.org"
export TZ=UTC

cd /srv/apt/repo/morgue

for file in *.deb *.dsc *.diff.gz *.tar.* *.buildinfo; do
  [ -f "$file" ] || continue

  # determine source name
  case $file in
    *.deb)
      source=$(dpkg-deb -I $file control | awk '/^Source:/ { print $2 }')
      [ -z "$source" ] && source=${file%%_*}
      ;;
    *)
      source=${file%%_*}
      ;;
  esac
  [ "$file" != "$source" ]

  # record meta data
  initial=$(echo $source | egrep -o '^(lib)?.')
  dir="$MORGUE/$initial/$source"
  mkdir -p "$dir"
  stat -c '%s' "$file" > "$dir/$file.size"
  touch -r "$file" "$dir/$file.size"
  case $file in
    *.deb)
      dpkg-deb -I $file control > "$dir/$file.info"
      ;;
  esac

  # remember filenames for index.html generation
  echo "$initial/$source" >> $MORGUEINDICES
  echo "$initial" >> $MORGUEINDICES
  echo "/" >> $MORGUEINDICES

  # move file to S3
  aws s3 cp "$file" "$S3/$initial/$source/$file"
  mkdir -p "$MORGUE/done"
  mv "$file" "$MORGUE/done"
done

if [ -s "$MORGUEINDICES" ]; then
#  # build new indices
#  apt-ftparchive -qq --db ../apt-ftparchive/packages.db packages . | xz > .Packages.xz.new
#  apt-ftparchive -qq --db ../apt-ftparchive/sources.db sources . 2>/dev/null | xz > .Sources.xz.new # suppress warnings about missing .orig.tar files etc.
#  mv .Packages.xz.new Packages.xz
#  mv .Sources.xz.new Sources.xz
#  # build new release
#  rm -f Release
#  apt-ftparchive -qq release . > .Release.new
#  mv .Release.new Release

  for dir in $(sort -u $MORGUEINDICES); do
    echo "Generating index.html for $dir ..."
    cd "$MORGUE/$dir"

    echo "<table border=\"0\">" > index.html

    echo "<tr><td><a href=\"../\">../</a></td></tr>" >> index.html
    for d in */; do
      [ -d "$d" ] || continue
      echo "<tr><td><a href=\"$d\">$d</a></td></tr>"
    done >> index.html

    for sizefile in *.size; do
      [ -f "$sizefile" ] || continue
      file="${sizefile%.size}"
      echo "<tr><td><a href=\"$file\">$file</a></td> <td>$(cat $sizefile) bytes</td> <td>$(stat -c %y $sizefile)</td></tr>"
    done >> index.html

    echo "</tr>" >> index.html

    s3file="$S3/$dir/index.html"
    [ "$dir" = "/" ] && s3file="$S3/index.html"
    aws s3 cp index.html "$s3file"
  done

fi

rm -f "$MORGUEINDICES"
