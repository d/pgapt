#!/usr/bin/ansible-playbook

- name: setup-buildd
  hosts: all
  become: true

  tasks:

  - name: packages
    apt:
      name:
      - acl # allow unprivileged users to read ansible's files
      - debootstrap
      - default-jre-headless
      - dose-builddebcheck
      - dose-distcheck
      - dose-extra
      - ferm
      - git
      - make
      - ncdu
      - newpid
      - postgresql-common # for apt.postgresql.org.sh
      - sbuild
      - schroot
      - sudo
      - ubuntu-archive-keyring
      - vim

  - name: remove packages
    apt:
      name:
      - joe
      - nano
      state: absent

  - name: apt.postgresql.org repository
    shell: echo yes | /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
    args:
      creates: /etc/apt/sources.list.d/pgdg.list

  #- name: pgdg-src.list
  #  lineinfile:
  #    line: 'deb-src http://atalia.postgresql.org/pub/repos/apt {{item}}-pgdg-testing main'
  #    dest: /etc/apt/sources.list.d/pgdg-src.list
  #    create: true
  #    mode: 0644
  #  with_lines:
  #    "sh -c '. ../../pgapt.conf; echo $PG_SUPPORTED_DISTS | xargs -n1'"
  #  register: pgdg_src
  #  tags:
  #    - list
  #
  #- name: apt-get update
  #  apt:
  #    update_cache: yes
  #  when: pgdg_src is changed

  - name: /usr/local/bin permissions
    file:
      state: directory
      dest: /usr/local/bin
      mode: 02775
      owner: root
      group: staff

  - name: Deploy scripts
    copy:
      src: ../{{item}}
      dest: /usr/local/bin/{{item}}
      mode: 0755
    with_items:
      - sbuild-update.sh
      - schroot-config.sh
      - netns-setup

  - name: allow sudo for sudo group
    lineinfile:
      line: '%sudo	ALL=(ALL:ALL) NOPASSWD: ALL'
      dest: /etc/sudoers
      regexp: '^%sudo'

  - name: buildd user
    user:
      name: buildd
      groups: sbuild,staff,sudo
      shell: /bin/bash

  - name: buildd authorized_keys
    authorized_key:
      user: buildd
      key: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDEbRuNmXd2MhrSN7RTINoj1kYZQ8iRKvhvGCE8jqgMj1UpKL8XGIiD3ouGqIYt1eDaDvMoSGEwYVYZHbkRz7U9Kpb2n7fenOhRTT9jkE4p4eYnYbhV81ZB487IiKBAkIyGk9+J6XbQO4dnLY+XDufGIKXkPwdYkw2otvxfSI+TjJQ7tRw4BHn9+UsPPKRYSO/i7d/jgZcthVWsRPdDk54dRI2uDClXob7rJjazCWPVBH8VDXbbM2q5xIgVAG812GXAXXksAljdQU05lwOgVo5foPVeV0SKnrVIugf4xmJXkNNtU1l62g5Whkqu9KMk1uzPpopSwyaGk7I0WftPU57J jenkins@pgdgbuild.dus.dg-i.net'

  - name: create chroot directory
    file:
      name: '{{chroot_dir}}'
      state: directory

  - name: symlink chroot directory from /home/chroot
    file:
      name: /home/chroot
      src: '{{chroot_dir}}'
      state: link
    when: 'chroot_dir != "/home/chroot"'

  # FIXME: needs to be re-run after pgapt.conf is present
  - name: update schroot config
    shell: /usr/local/bin/schroot-config.sh > /etc/schroot/chroot.d/sbuild.conf

  - name: schroot sbuild fstab
    copy:
      src: fstab.sbuild
      dest: /etc/schroot/sbuild/fstab
      mode: 0644

  - name: schroot default fstab
    copy:
      src: fstab.default
      dest: /etc/schroot/default/fstab
      mode: 0644

  # make sure /etc/hosts is handled in copyfiles instead of nssdatabases
  - name: schroot copyfiles
    copy:
      src: schroot.copyfiles
      dest: /etc/schroot/{{item}}/copyfiles
      mode: 0644
    with_items:
      - default
      - sbuild
  - name: schroot nssdatabases
    copy:
      src: schroot.nssdatabases
      dest: /etc/schroot/{{item}}/nssdatabases
      mode: 0644
    with_items:
      - default
      - sbuild

  - name: /etc/default/schroot
    copy:
      src: schroot.default
      dest: /etc/default/schroot
      mode: 0644

  - name: sbuild lock directory
    file:
      state: directory
      dest: /run/lock/sbuild-package
      mode: 03775
      owner: buildd
      group: sbuild

  - name: sbuild.conf
    copy:
      src: sbuild.conf
      dest: /etc/sbuild/sbuild.conf
      mode: 0644

  - name: add /run to /etc/fstab
    lineinfile:
      dest: /etc/fstab
      line: 'tmpfs /run tmpfs {{run_opts}} 0 0'
      regexp: '.*/run.*'
    when: run_opts is defined
    register: fstab

  - name: resize /run
    command: mount -oremount /run
    args:
      warn: off # no we don't want to use the mount module
    when: fstab is changed

  - name: /etc/rc.local
    copy:
      src: rc.local
      dest: /etc/rc.local
      mode: 0755

  - name: enable ipv4 forwarding
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: yes

  - name: ferm.conf
    copy:
      src: ferm.conf
      dest: /etc/ferm/ferm.conf
      mode: 0644
    register: fermconf

  - name: reload ferm
    service:
      name: ferm
      state: reloaded
    when: fermconf is changed

  - name: run netns-setup
    shell: /usr/local/bin/netns-setup

  - name: git user name
    git_config:
      name: user.name
      value: apt.postgresql.org buildd
      scope: global
    become: true
    become_user: buildd

  - name: git user email
    git_config:
      name: user.email
      value: pgsql-pkg-debian@lists.postgresql.org
      scope: global
    become: true
    become_user: buildd
