# defaults and macros

- defaults:
    name: global
    description: 'Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
    properties: &properties
        - build-discarder:
            days-to-keep: 7
            num-to-keep: -1
            artifact-days-to-keep: -1
            artifact-num-to-keep: 1
        - copyartifact:
            projects: '*'
    wrappers:
        - timestamps
    dist-filter: 'true'
    arch-filter: 'true'
    filter: &filter                                                       '!(((distribution=="eoan" || distribution=="disco") && (architecture=="i386" || architecture=="ppc64el")) || (distribution=="bullseye" && architecture=="i386") || (distribution=="jessie" && architecture=="ppc64el"))'
    filter_pattern: &filter_pattern '({arch-filter}) && ({dist-filter}) && !(((distribution=="eoan" || distribution=="disco") && (architecture=="i386" || architecture=="ppc64el")) || (distribution=="bullseye" && architecture=="i386") || (distribution=="jessie" && architecture=="ppc64el"))'
    filter_patbeta: &filter_patbeta '({arch-filter}) && ({dist-filter}) && !(((distribution=="eoan" || distribution=="disco") && (architecture=="i386" || architecture=="ppc64el")) || (distribution=="bullseye" && architecture=="i386") || (distribution=="jessie" && architecture=="ppc64el"))'
    # patbeta: variant of filter that excludes PostgreSQL-beta packages to be built (was used for cosmic)
    git-branch: master
    backports: ''
    backports_runtime: ''
    disable_submodules: false

- yamltemplates:
    name: yamltemplates

    revision_string: &revision_string
        name: revision
        default: '1'
        description: Revision number to use on generated source package (number in .pgdg+N suffix)

    git_branch: &git_branch
        name: branch
        description: Git branch, tag, or commit to build
    git_branch_template: &git_branch_template
        <<: *git_branch
        default: '{git-branch}'

    queue_choice: &queue_choice
            name: queue
            choices:
                    - incoming
                    - snapshot
                    - private
                    - discard
            description: 'Incoming queue to use: incoming uploads to reprepro, snapshot uploads to *-snapshot distributions, private stages the upload in a directory, discard throws the upload away.'

    buildtype_choice: &buildtype_choice
            name: buildtype
            choices:
                    - normal
                    - snapshot
                    - snapshot-dot
            description: 'snapshot: if changelog is UNRELEASED, build a snapshot tarball with a ~date version. With snapshot-dot, use a .date version.'

    buildtype_choice_snapshot: &buildtype_choice_snapshot
            name: buildtype
            choices:
                    - snapshot
                    - snapshot-dot
                    - normal
            description: 'snapshot: if changelog is UNRELEASED, build a snapshot tarball with a ~date version. With snapshot-dot, use a .date version.'

    upload_choice: &upload_choice
            name: upload
            choices:
                    - all
                    - extension-only
            description: 'all: upload all .deb files built, extension-only: upload PostgreSQL-version-specific .deb files only'

    slaves_axis: &slaves_axis
            type: slave
            name: slave
            values:
              - credativ-x86-1
              - credativ-x86-2
              - credativ-x86-3
              - moe-x86
              - pgdgbuild-x86
              - pgdgbuild-ppc64el
    x86_slaves_axis: &x86_slaves_axis
            type: slave
            name: slave
            values:
              - credativ-x86-1
              - credativ-x86-2
              - credativ-x86-3
              - moe-x86
              - pgdgbuild-x86
    ppc64el_slaves_axis: &ppc64el_slaves_axis
            type: slave
            name: slave
            values:
              - pgdgbuild-ppc64el

    arch_axis: &arch_axis
            type: slave
            name: architecture
            values: &arch_list
                    - amd64
                    - i386
                    - ppc64el
    arch_axis_userdefined: &arch_axis_userdefined
            <<: *arch_axis
            type: user-defined

    git_head_arch_axis: &git_head_arch_axis
            type: slave
            name: architecture
            values: [amd64]

    dist_axis: &dist_axis
            type: user-defined
            name: distribution
            values: &dist_list
                    - sid
                    - bullseye
                    - buster
                    - stretch
                    - jessie
                    - eoan
                    - disco
                    - bionic
                    - xenial

    sid_dist_axis: &sid_dist_axis
            type: user-defined
            name: distribution
            values:
                    - sid

    git_head_dist_axis: &git_head_dist_axis
            type: user-defined
            name: distribution
            values:
                    - sid
                    - buster
                    - stretch
                    - bionic
                    - xenial

    distribution_parameter: &distribution_parameter
            name: distribution
            choices: *dist_list
            description: 'Distribution to build for'

    matrix_combination_parameter: &matrix_combination_parameter
            name: matrix
            description: Distribution/architecture combinations to build

    supported_versions_param: &supported_versions_param
            name: DEB_PG_SUPPORTED_VERSIONS
            default: 'pgdg'
            description: 'PostgreSQL versions to target'
    supported_versions_param_beta: &supported_versions_param_beta
            name: DEB_PG_SUPPORTED_VERSIONS
            default: '12'
            description: 'PostgreSQL versions to target'

    deb_build_options_param: &deb_build_options_param
            name: DEB_BUILD_OPTIONS
            default: ''
            description: 'Extra build options for dpkg-buildpackage'

    binnmu_reason_param: &binnmu_reason_param
            name: binnmu_reason
            description: 'binNMU changelog text'
    binnmu_version_param: &binnmu_version_param
            name: binnmu_version
            description: 'binNMU version (single integer)'

    autopkgtest_choice: &autopkgtest_choice
            name: ADT
            choices:
                    - run
                    - skip
            description: 'Run autopkgtest at build time'
    noautopkgtest_choice: &noautopkgtest_choice
            name: ADT
            choices:
                    - skip
                    - run
            description: 'Run autopkgtest at build time'

    ircbot_only_configs: &only_configs
            strategy: any-failure
            message-type: summary
            matrix-notifier: only-configurations

    properties_more_artifacts: &properties_more_artifacts
        - build-discarder:
            days-to-keep: 7
            num-to-keep: -1
            artifact-days-to-keep: 1
            artifact-num-to-keep: -1
        - copyartifact:
            projects: '*'

    add_version_tag: &add_version_tag
        script: |
            import java.util.regex.Matcher;
            for (a in manager.build.getArtifacts()) {{
                    m = (a =~ /.*_(.*)\.dsc/);
                    if (m.matches()) {{
                            manager.addShortText(m[0][1]);
                            break;
                    }}
            }}
    add_version_tag_plain: &add_version_tag_plain
        script: |
            import java.util.regex.Matcher;
            for (a in manager.build.getArtifacts()) {
                    m = (a =~ /(.*)\.dsc/);
                    if (m.matches()) {
                            manager.addShortText(m[0][1]);
                            break;
                    }
            }

# pipeline template

- job-template: &build_pipeline
        name: '{name}'
        id: 'build-pipeline'
        description: 'Build source and binaries for {name}, and upload them'
        project-type: pipeline
        parameters:
                - string: *revision_string
                - string: *git_branch_template
                - string: *supported_versions_param
                - choice: *buildtype_choice
                - choice: *queue_choice
        dsl: |
                pipeline {{
                    agent {{ label 'master' }}
                    stages {{
                        stage('source') {{
                            steps {{
                                build(job: '{name}-source',
                                    parameters: [
                                        string(name: 'revision', value: revision),
                                        string(name: 'branch', value: branch),
                                        string(name: 'buildtype', value: buildtype),
                                    ]
                                )
                            }}
                        }}
                        stage('binaries') {{
                            steps {{
                                build(job: '{name}-binaries')
                                build(job: 'dput',
                                    parameters: [
                                        string(name: 'binaries', value: '{name}-binaries'),
                                        string(name: 'queue', value: queue),
                                        string(name: 'upload', value: 'all'),
                                    ]
                                )
                            }}
                        }}
                    }}
                }}

- job-template:
        <<: *build_pipeline
        name: '{name}'
        id: 'build-pipeline-with-beta'
        description: 'Build source and binaries for {name}, and upload them, including PostgreSQL beta'
        dsl: |
                pipeline {{
                    agent {{ label 'master' }}
                    stages {{
                        stage('source') {{
                            steps {{
                                build(job: '{name}-source',
                                    parameters: [
                                        string(name: 'revision', value: revision),
                                        string(name: 'branch', value: branch),
                                        string(name: 'buildtype', value: buildtype),
                                    ]
                                )
                            }}
                        }}
                        stage('binaries') {{
                            steps {{
                                build(job: '{name}-binaries')
                                build(job: 'dput',
                                    parameters: [
                                        string(name: 'binaries', value: '{name}-binaries'),
                                        string(name: 'queue', value: queue),
                                        string(name: 'upload', value: 'all'),
                                    ]
                                )
                            }}
                        }}
                        stage('binaries-beta') {{
                            steps {{
                                build(job: '{name}-binaries-beta')
                                build(job: 'dput',
                                    parameters: [
                                        string(name: 'binaries', value: '{name}-binaries-beta'),
                                        string(name: 'queue', value: queue),
                                        string(name: 'upload', value: 'extension-only'),
                                    ]
                                )
                            }}
                        }}
                    }}
                }}

- job-template: &build_pipeline_split_autopkgtest
        <<: *build_pipeline
        name: '{name}'
        id: 'build-pipeline-split-autopkgtest'
        description: 'Build source and binaries for {name}, test, and upload them'
        dsl: |
                pipeline {{
                    agent {{ label 'master' }}
                    stages {{
                        stage('source') {{
                            steps {{
                                build(job: '{name}-source',
                                    parameters: [
                                        string(name: 'revision', value: revision),
                                        string(name: 'branch', value: branch),
                                        string(name: 'buildtype', value: buildtype),
                                    ]
                                )
                            }}
                        }}
                        stage('binaries') {{
                            steps {{
                                build(job: '{name}-binaries')
                                build(job: '{name}-testsuite')
                                build(job: 'dput',
                                    parameters: [
                                        string(name: 'binaries', value: '{name}-binaries'),
                                        string(name: 'queue', value: queue),
                                        string(name: 'upload', value: 'all'),
                                    ]
                                )
                            }}
                        }}
                    }}
                }}

- job-template:
        <<: *build_pipeline_split_autopkgtest
        name: '{name}'
        id: 'build-pipeline-split-autopkgtest-with-git'
        triggers:
                - pollscm: # build every six hours
                        cron: "H */6 * * *"
        parameters:
                - string: *revision_string
                - string: *git_branch_template
                - choice: *buildtype_choice_snapshot
                - choice: *queue_choice
        dsl: |
                pipeline {{
                    agent {{ label 'master' }}
                    stages {{
                        stage('git') {{
                            steps {{
                                checkout([$class: 'GitSCM',
                                    branches: [[name: '*/master']],
                                    doGenerateSubmoduleConfigurations: false,
                                    extensions: [
                                        [$class: 'CloneOption',
                                            depth: 0,
                                            noTags: true,
                                            reference: '/var/lib/jenkins/gitcache.buexcl/postgresql',
                                            shallow: true
                                        ],
                                        [$class: 'SparseCheckoutPaths',
                                            sparseCheckoutPaths: [[path: 'HISTORY']]
                                        ]
                                    ],
                                    submoduleCfg: [],
                                    userRemoteConfigs: [[url: 'https://git.postgresql.org/git/postgresql.git']]
                                ])
                            }}
                        }}
                        stage('source') {{
                            steps {{
                                build(job: '{name}-source',
                                    parameters: [
                                        string(name: 'revision', value: revision),
                                        string(name: 'branch', value: branch),
                                        string(name: 'buildtype', value: buildtype),
                                    ]
                                )
                            }}
                        }}
                        stage('binaries') {{
                            steps {{
                                build(job: '{name}-binaries')
                                build(job: '{name}-testsuite')
                                build(job: 'dput',
                                    parameters: [
                                        string(name: 'binaries', value: '{name}-binaries'),
                                        string(name: 'queue', value: queue),
                                        string(name: 'upload', value: 'all'),
                                    ]
                                )
                            }}
                        }}
                    }}
                }}

- job:
        <<: *build_pipeline
        name: 'build-binaries-beta'
        id: 'build-binaries-beta'
        description: 'Build binaries for some package, and upload them, for PostgreSQL beta'
        parameters:
                - string: &package_parameter
                        name: PACKAGE
                        description: 'Package to build (without -source suffix)'
                - string: *supported_versions_param_beta
                - string: *binnmu_reason_param
                - string: *binnmu_version_param
                - choice: *queue_choice
        concurrent: true
        dsl: |
                pipeline {
                    agent { label 'master' }
                    stages {
                        stage('binaries-beta') {
                            steps {
                                addShortText("${params.PACKAGE}-binaries-beta (${params.queue})")
                                build(job: "${params.PACKAGE}-binaries-beta",
                                    parameters: [
                                        string(name: 'binnmu_reason', value: "${params.binnmu_reason}"),
                                        string(name: 'binnmu_version', value: "${params.binnmu_version}"),
                                        string(name: 'DEB_PG_SUPPORTED_VERSIONS', value: "${params.DEB_PG_SUPPORTED_VERSIONS}"),
                                    ]
                                )
                                build(job: 'dput',
                                    parameters: [
                                        string(name: 'binaries', value: "${params.PACKAGE}-binaries-beta"),
                                        string(name: 'queue', value: "${params.queue}"),
                                        string(name: 'upload', value: 'extension-only'),
                                    ]
                                )
                            }
                        }
                    }
                }

- job:
        <<: *build_pipeline
        name: 'build-source-and-one-dist'
        id: 'build-source-and-one-dist'
        description: 'Build source, and then binaries for one distribution only, and upload them'
        parameters:
                - string: *package_parameter
                - string: *revision_string
                - string: *git_branch
                - choice: *buildtype_choice_snapshot
                - choice: *distribution_parameter
                - string: *supported_versions_param
                - string: *binnmu_reason_param
                - string: *binnmu_version_param
                - choice: *queue_choice
                - choice: *upload_choice
        concurrent: true
        dsl: |
                pipeline {
                    agent { label 'master' }
                    stages {
                        stage('source') {
                            steps {
                                addShortText("${params.PACKAGE} ${params.branch} (${params.distribution}, ${params.queue})")
                                build(job: "${params.PACKAGE}-source",
                                    parameters: [
                                        string(name: 'revision', value: revision),
                                        string(name: 'branch', value: branch ?: 'master'),
                                        string(name: 'buildtype', value: buildtype),
                                    ]
                                )
                            }
                        }
                        stage('binaries') {
                            steps {
                                build(job: "build-one-dist",
                                    parameters: [
                                        string(name: 'PACKAGE', value: "${params.PACKAGE}"),
                                        string(name: 'distribution', value: "${params.distribution}"),
                                        string(name: 'binnmu_reason', value: "${params.binnmu_reason}"),
                                        string(name: 'binnmu_version', value: "${params.binnmu_version}"),
                                        string(name: 'DEB_PG_SUPPORTED_VERSIONS', value: "${params.DEB_PG_SUPPORTED_VERSIONS}"),
                                        string(name: 'queue', value: "${params.queue}"),
                                        string(name: 'upload', value: "${params.upload}"),
                                    ]
                                )
                            }
                        }
                    }
                }

# apt template

- job-template: &apt_source_template
        name: '{name}-source'
        id: 'source-apt'
        description: 'Build Debian source package of {name} from "apt-get source".<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        project-type: matrix
        child-workspace: .
        parameters:
                - string: *revision_string
                - string:
                        name: apt_suite
                        default: '{apt-suite}'
                        description: Debian release to "apt-get source" from
        execution-strategy:
                sequential: true
                combination-filter: '{dist-filter}'
                touchstone:
                        expr: 'distribution=="sid"'
        axes:
                - axis: *dist_axis
        builders:
                - shell: 'generate-pgdg-source'
        publishers:
                - archive:
                        artifacts: 'result/*'
                        latest-only: true
                - ircbot:
                        matrix-notifier: only-parent
                - groovy-postbuild: *add_version_tag

# git template

- job-template: &git_source_template
        <<: *apt_source_template
        name: '{name}-source'
        id: 'source-git'
        description: 'Build Debian source package of {name} from git.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        parameters:
                - string: *git_branch_template
                - string: *revision_string
                - choice: *buildtype_choice
        scm:
                - git:
                        url: '{git-url}'
                        branches:
                                - '$branch'
                        basedir: source
                        wipe-workspace: false
                        submodule:
                                disable: '{disable_submodules}'
                                recursive: true
                        clean:
                                before: true

# special git-in-git job for postgresql-devel
- job-template:
        <<: *git_source_template
        name: '{name}-source'
        id: 'source-git-head'
        parameters:
                - string: *git_branch_template
                - choice:
                        name: merge
                        choices:
                                - '{merge-branch}'
                        description: 'Packaging branch to merge with before build'
                - string: *revision_string
                - choice: *buildtype_choice_snapshot
        axes:
                - axis: *git_head_dist_axis
        scm:
                - git:
                        url: '{git-url}'
                        reference-repo: '$HOME/gitcache.buexcl/postgresql'
                        branches:
                                - '$branch'
                        basedir: source
                        wipe-workspace: false
        publishers:
                - archive:
                        artifacts: 'result/*'
                        latest-only: true
                - ircbot:
                        matrix-notifier: only-parent
                - groovy-postbuild: *add_version_tag

# binaries template

- job-template: &binaries_template
        name: '{name}-binaries'
        id: 'binaries'
        description: 'Build Debian binary packages of {name}'
        project-type: matrix
        execution-strategy: &binaries_execution_strategy
                combination-filter: *filter_pattern
                touchstone:
                        expr: '(distribution=="sid") && (architecture=="amd64")'
        axes:
                - axis: *arch_axis
                - axis: *dist_axis
        parameters:
                - string: *supported_versions_param
                - string: *deb_build_options_param
                - string: *binnmu_reason_param
                - string: *binnmu_version_param
                - choice: *autopkgtest_choice
                - matrix-combinations: *matrix_combination_parameter
        builders:
                - shell: 'rm -rf *'
                - copyartifact: &copysource
                        project: '{name}-source/distribution=$distribution'
                        filter: 'result/*'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                        do-not-fingerprint: true
                - shell: '{backports}sbuild-package'
        publishers:
                - archive: &binaries_archive
                        artifacts: '*.gz,*.bz2,*.xz,*.asc,*.deb,*.dsc,*.changes,*.buildinfo'
                        latest-only: true
                - junit:
                        results: autopkgtest.xml
                - ircbot: *only_configs
                - groovy-postbuild: *add_version_tag
                - workspace-cleanup

- job-template: &binaries_no_autopkgtest
        <<: *binaries_template
        id: 'binaries-no-autopkgtest'
        parameters:
                - string: *supported_versions_param
                - string: *deb_build_options_param
                - string: *binnmu_reason_param
                - string: *binnmu_version_param
                - choice: *noautopkgtest_choice
                - matrix-combinations: *matrix_combination_parameter

# binaries triggered from -source-git-head
- job-template:
        <<: *binaries_no_autopkgtest
        name: '{name}-binaries'
        id: 'binaries-git-head'
        axes:
                - axis: *git_head_arch_axis
                - axis: *git_head_dist_axis

# binaries for building modules for PostgreSQL beta
- job-template:
        <<: *binaries_template
        name: '{name}-binaries-beta'
        id: 'binaries-beta'
        execution-strategy:
                <<: *binaries_execution_strategy
                combination-filter: *filter_patbeta
        parameters:
                - string: *supported_versions_param_beta
                - string: *deb_build_options_param
                - string: *binnmu_reason_param
                - string: *binnmu_version_param
                - choice: *autopkgtest_choice
                - matrix-combinations: *matrix_combination_parameter

## binaries for building modules for PostgreSQL devel
#- job-template:
#        <<: *binaries_template
#        name: '{name}-binaries-devel'
#        id: 'binaries-devel'
#        axes:
#                - axis: *git_head_arch_axis
#                - axis: *git_head_dist_axis
#        builders:
#                - shell: 'rm -rf *'
#                - copyartifact: *copysource
#                - shell: 'DEB_PG_SUPPORTED_VERSIONS="12" {backports}sbuild-package'

# build binaries for a single distribution

- job:
        <<: *binaries_template
        name: 'build-one-dist'
        id: 'build-one-dist'
        description: 'Build Debian binary packages for a single distribution, and upload them'
        concurrent: true
        properties: *properties_more_artifacts
        parameters:
                - string: *package_parameter
                - choice: *distribution_parameter
                - string: *supported_versions_param
                - string: *deb_build_options_param
                - string: *binnmu_reason_param
                - string: *binnmu_version_param
                - choice: *autopkgtest_choice
                - choice: *queue_choice
                - choice: *upload_choice
                - bool:
                        name: BACKPORTS
                        description: 'Include backports repository in build chroot'
        execution-strategy:
                combination-filter: *filter
                #touchstone:
                #        expr: 'architecture=="amd64"'
        axes:
                - axis: *arch_axis
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: '$PACKAGE-source/distribution=$distribution'
                        filter: 'result/*'
                        flatten: true
                        fallback-to-last-successful: true
                        do-not-fingerprint: true
                - shell: 'sbuild-package'
        publishers:
                - archive: *binaries_archive
                - junit:
                        results: autopkgtest.xml
                - ircbot:
                    strategy: any-failure
                    message-type: summary-params
                    matrix-notifier: only-configurations
                - groovy-postbuild: *add_version_tag_plain
                - workspace-cleanup
                - trigger-parameterized-builds:
                        - project: 'dput'
                          condition: SUCCESS
                          predefined-parameters: |
                                binaries=$JOB_NAME
                                queue=$queue
                                upload=$upload

# building modules for PostgreSQL beta, get source from apt.
# useful when the current -source job doesn't have all dists yet because
# it was not rerun since a new dist was added

- job: &build_binaries_from_apt
        <<: *binaries_template
        name: 'build-binaries-from-apt'
        id: 'build-binaries-from-apt'
        concurrent: true
        execution-strategy:
                combination-filter: *filter
                touchstone:
                        expr: '(distribution=="sid") && (architecture=="amd64")'
        parameters:
                - string:
                        name: PACKAGE
                        description: 'Package to build binaries for (without -source suffix)'
                - string: *supported_versions_param
                - string: *deb_build_options_param
                - bool:
                        name: BACKPORTS
                        description: 'Include backports repository in build chroot'
                - choice: *autopkgtest_choice
                - matrix-combinations: *matrix_combination_parameter
        builders:
                - shell: 'rm -rf *'
                - shell: |
                    case $distribution in
                      sid)    tag='pgdg+' ;;
                      bullseye) tag='pgdg110+' ;;
                      buster) tag='pgdg100+' ;;
                      stretch) tag='pgdg90+' ;;
                      jessie) tag='pgdg80+' ;;
                      eoan) tag='pgdg19.10+' ;;
                      disco) tag='pgdg19.04+' ;;
                      bionic) tag='pgdg18.04+' ;;
                      xenial) tag='pgdg16.04+' ;;
                      *) echo "bad distribution"; exit 1 ;;
                    esac
                    version=$(apt-cache showsrc $PACKAGE | awk '/^Version:/ { print $2 }' | grep $tag)
                    apt-get source -d $PACKAGE=$version
                - shell: 'sbuild-package'
        publishers:
                - archive: *binaries_archive
                - junit:
                        results: autopkgtest.xml
                - ircbot:
                        strategy: any-failure
                        message-type: summary-params
                - groovy-postbuild: *add_version_tag_plain
                - workspace-cleanup

- job:
        <<: *build_binaries_from_apt
        name: 'build-binary-from-apt'
        id: 'build-binary-from-apt'
        project-type: freestyle
        parameters:
                - string:
                        name: PACKAGE
                        description: 'Package to build binaries for (without -source suffix)'
                - string: *supported_versions_param
                - string: *deb_build_options_param
                - choice: *distribution_parameter
                - node:
                        name: architecture
                        allowed-slaves:
                           - amd64
                           - i386
                           - ppc64el
                        description: 'Architecture to build for'
                - bool:
                        name: BACKPORTS
                        description: 'Include backports repository in build chroot'
                - choice: *autopkgtest_choice
                - matrix-combinations: *matrix_combination_parameter

# testsuite template

- job-template: &testsuite_template
        name: '{name}-testsuite'
        description: 'Run the postgresql-common testsuite on {name}.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        project-type: matrix
        execution-strategy:
                combination-filter: *filter_pattern
                touchstone:
                        expr: '(distribution=="sid") && (architecture=="amd64")'
        axes:
                - axis: *arch_axis
                - axis: *dist_axis
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: '{name}-binaries/architecture=$architecture,distribution=$distribution'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                        do-not-fingerprint: true
                - shell: 'postgresql-testsuite'
        publishers:
                - archive: *binaries_archive
                - ircbot: *only_configs
                - workspace-cleanup

- job-template:
        <<: *testsuite_template
        name: '{name}-testsuite'
        id: 'testsuite-git-head'
        parameters:
                - matrix-combinations: *matrix_combination_parameter
        axes:
                - axis: *git_head_arch_axis
                - axis: *git_head_dist_axis
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: '{name}-binaries/architecture=$architecture,distribution=$distribution'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                        do-not-fingerprint: true
                - shell: 'postgresql-testsuite'
        publishers:
                - archive: *binaries_archive
                - ircbot: *only_configs
                - workspace-cleanup

- job-template: &autopkgtest_template
        <<: *testsuite_template
        name: '{name}-autopkgtest'
        id: 'autopkgtest'
        description: 'Run autopkgtest on {name}'
        workspace: /tmp
        child-workspace: .
        triggers:
                - timed: "H H H * *"
        builders:
                - shell: '{backports_runtime}pgdg-autopkgtest {name}'
        publishers:
                - ircbot: *only_configs

- job-template:
        <<: *autopkgtest_template
        name: '{name}-autopkgtest-beta'
        id: 'autopkgtest-beta'
        triggers:
                - timed: "H H H * *"
        builders:
                - shell: '{backports_runtime}PG_SUPPORTED_VERSIONS=12 pgdg-autopkgtest {name}'

- job-template:
        <<: *autopkgtest_template
        name: '{name}-autopkgtest'
        id: 'autopkgtest-git-head'
        axes:
                - axis: *git_head_arch_axis
                - axis: *git_head_dist_axis

# upgrade test template

- job-template: &upgrade_template
        name: 'upgrade-{oldversion}-{newversion}'
        id: 'upgrade'
        description: 'Test upgrades from {oldversion} to {newversion}.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        project-type: matrix
        parameters:
                - matrix-combinations: *matrix_combination_parameter
        execution-strategy:
                combination-filter: *filter_pattern
                touchstone:
                        expr: '(distribution=="sid") && (architecture=="amd64")'
        axes:
                - axis: *arch_axis
                - axis: *dist_axis
        triggers:
                - timed: "H H H * *"
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: 'postgresql-{oldversion}-binaries/architecture=$architecture,distribution=$distribution'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                        do-not-fingerprint: true
                - copyartifact:
                        project: 'postgresql-{newversion}-binaries/architecture=$architecture,distribution=$distribution'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                        do-not-fingerprint: true
                - shell: 'rm lib*_{oldversion}*'
                - shell: 'rm -vf postgresql-{oldversion}-dbg_*' # conflict via /usr/lib/debug/usr/bin/ecpg
                - shell: 'postgresql-testsuite'
        publishers:
                - ircbot: *only_configs
                - workspace-cleanup

- job-template:
        <<: *upgrade_template
        name: 'upgrade-{oldversion}-{newversion}'
        id: 'upgrade-sid'
        axes:
                - axis: *arch_axis
                - axis: *sid_dist_axis

- job-template:
        <<: *upgrade_template
        name: 'upgrade-{oldversion}-{newversion}'
        id: 'upgrade-git-head'
        axes:
                - axis: *git_head_arch_axis
                - axis: *git_head_dist_axis

# job groups

- job-group:
        name: apt-packages
        jobs:
                - 'build-pipeline'
                - 'source-apt'
                - 'binaries'
                - 'autopkgtest'

- job-group:
        name: apt-packages-with-next
        jobs:
                - 'build-pipeline-with-beta'
                - 'source-apt'
                - 'binaries'
                - 'binaries-beta'
                - 'autopkgtest'
                - 'autopkgtest-beta'

- job-group:
        name: git-packages
        jobs:
                - 'build-pipeline'
                - 'source-git'
                - 'binaries'
                - 'autopkgtest'

- job-group:
        name: git-packages-no-testsuite
        jobs:
                - 'build-pipeline'
                - 'source-git'
                - 'binaries-no-autopkgtest'

- job-group:
        name: git-packages-with-next
        jobs:
                - 'build-pipeline-with-beta'
                - 'source-git'
                - 'binaries'
                - 'binaries-beta'
                - 'autopkgtest'
                - 'autopkgtest-beta'

- job-group:
        name: git-packages-split-autopkgtest
        jobs:
                - 'build-pipeline-split-autopkgtest'
                - 'source-git'
                - 'binaries-no-autopkgtest'
                - '{name}-testsuite'
                - 'autopkgtest'

- job-group:
        name: git-packages-split-autopkgtest-with-git
        jobs:
                - 'build-pipeline-split-autopkgtest-with-git'
                - 'source-git-head'
                - 'binaries-git-head'
                - 'testsuite-git-head'
                - 'autopkgtest-git-head'

# simple jobs

- job:
        name: apt.postgresql.org
        description: 'Update apt.postgresql.org (pgapt.git) checkout on build hosts'
        project-type: matrix
        child-workspace: .
        axes:
                - axis: *slaves_axis
        scm: &scm_pgapt
                - git:
                        url: https://git.postgresql.org/git/pgapt.git
                        branches:
                                - master
                        wipe-workspace: false
        builders:
                - shell: 'chmod go+rX -R .' # make directory readable for other workers
                - shell: 'cd jenkins && make install'
        publishers:
                - trigger:
                        project: apt.postgresql.org-jobs
                - ircbot:
                        strategy: any-failure
                        matrix-notifier: only-parent

- job:
        name: apt.postgresql.org-jobs
        scm: *scm_pgapt
        builders:
                - shell: 'cd jenkins && make && make update'
        publishers:
                - ircbot

- job:
        name: 'debcheck-distsmirror'
        description: 'Sync apt.pg.org dists/ directory and trigger debcheck'
        project-type: matrix
        child-workspace: .
        axes:
                - axis: *slaves_axis
        builders:
                - shell: |
                        wget --mirror http://atalia.postgresql.org/dists.tar.gz
                        rm -rf ~/dists
                        tar -C ~ -xf atalia.postgresql.org/dists.tar.gz
                #rsync -Pav --delete atalia.postgresql.org:/srv/apt/pub/repos/apt/dists/ /home/jenkins/dists
        publishers:
                - ircbot:
                        strategy: any-failure
                        message-type: summary

- job: &debcheck
        name: 'debcheck'
        description: 'Run dose-debcheck on all distributions'
        project-type: matrix
        child-workspace: .
        parameters:
                - matrix-combinations: *matrix_combination_parameter
        execution-strategy:
                combination-filter: *filter
        axes:
                - axis: *dist_axis
                - axis: *arch_axis
                - axis:
                        type: user-defined
                        name: stage
                        values:
                                - production
                                - testing
        builders:
                - shell: debcheck-pgapt
        publishers:
                - ircbot:
                        strategy: any-failure
                        message-type: summary
                        matrix-notifier: only-configurations

- job:
        <<: *debcheck
        name: 'builddebcheck'
        description: 'Run dose-builddebcheck on all distributions'
        builders:
                - shell: 'builddebcheck-pgapt'

- job:
        name: 'debcheck-pipeline'
        description: 'Run dose-builddebcheck on all distributions'
        project-type: pipeline
        triggers:
                - timed: "H H * * *"
        dsl: |
                pipeline {
                    agent { label 'master' }
                    stages {
                        stage('distsmirror') {
                            steps {
                                build(job: 'debcheck-distsmirror')
                            }
                        }
                        stage('debcheck') {
                            steps {
                                parallel(
                                    "debcheck": { build(job: 'debcheck') },
                                    "builddebcheck": { build(job: 'builddebcheck') }
                                )
                            }
                        }
                    }
                }

- job: &sbuild_update_x86
        name: 'sbuild-update-x86'
        description: 'Update sbuild chroots'
        project-type: matrix
        child-workspace: .
        parameters:
                - matrix-combinations: *matrix_combination_parameter
        execution-strategy:
                sequential: true
                combination-filter: *filter
        axes:
                - axis: *x86_slaves_axis
                - axis:
                    type: user-defined
                    name: architecture
                    values:
                      - amd64
                      - i386
                - axis: *dist_axis
        triggers:
                - timed: "H */6 * * *"
        builders:
                - shell: 'sbuild-update.sh'
        publishers:
                - ircbot: *only_configs

- job:
        <<: *sbuild_update_x86
        name: 'sbuild-update-ppc64el'
        axes:
                - axis: *ppc64el_slaves_axis
                - axis:
                    type: user-defined
                    name: architecture
                    values:
                      - ppc64el
                - axis: *dist_axis

- job: &dput
        name: dput
        description: 'Push packages to the repository.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        parameters:
                - string:
                        name: binaries
                        description: Name of binaries job to copy artifacts from (including -binaries suffix)
                - choice: *queue_choice
                - choice: *upload_choice
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: '$binaries'
                        filter: '*.gz,*.bz2,*.xz,*.asc,*.deb,*.dsc,*.changes,*.buildinfo'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                        do-not-fingerprint: true
                - shell: 'dput-pgdg $queue'
        publishers:
                - ircbot:
                        matrix-notifier: all
                        message-type: summary-params
                - groovy-postbuild: &dput_groovy
                        script: 'manager.addShortText("${manager.build.environment.binaries} (${manager.build.environment.queue}, ${manager.build.environment.upload})")'
                - workspace-cleanup

# variant of dput that handles each configuration separately
# (needed after using matrixreloaded on build jobs)
- job:
        <<: *dput
        name: dput-matrixreloaded
        project-type: matrix
        child-workspace: .
        parameters:
                - string:
                        name: binaries
                        description: Name of binaries job to copy artifacts from (including -binaries suffix)
                - choice: *queue_choice
                - choice: *upload_choice
                - matrix-combinations: *matrix_combination_parameter
        execution-strategy:
                sequential: true
                combination-filter: *filter
                touchstone:
                        expr: '(distribution=="sid") && (architecture=="amd64")'
        axes:
                - axis: *arch_axis_userdefined
                - axis: *dist_axis
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: '$binaries/architecture=$architecture,distribution=$distribution'
                        filter: '*.gz,*.bz2,*.xz,*.asc,*.deb,*.dsc,*.changes,*.buildinfo'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                        do-not-fingerprint: true
                - shell: 'dput-pgdg $queue'
        publishers:
                - ircbot:
                        matrix-notifier: only-parent
                        message-type: summary-params
                - groovy-postbuild: *dput_groovy
                - workspace-cleanup

- job:
        name: hardlink-jenkins-files
        description: 'Save some space in ~jenkins by hardlinking files'
        triggers:
                - timed: "H H * * *"
        builders:
                - shell: |
                    cd $JENKINS_HOME && hardlink -vfot -i '\.tar\.' -i '\.dsc$' -i '\.deb$' jobs* workspace*
        publishers:
                - ircbot:
                        strategy: any-failure
                        message-type: summary

- job:
        name: gitcache-postgresql
        description: Reference repository postgresql source jobs
        workspace: '$HOME/gitcache.buexcl/postgresql'
        scm:
                - git:
                        url: https://git.postgresql.org/git/postgresql.git
                        branches:
                                - master
                        sparse-checkout:
                                paths:
                                        - HISTORY
                        wipe-workspace: false
        triggers:
                - pollscm:
                        cron: "H */6 * * *"

- job: &ping
        name: ping-ppc64el
        description: Check if the ppc64el build host is up
        workspace: '$JENKINS_HOME'
        node: master
        triggers:
                - timed: "H */4 * * *"
        builders:
                - shell: 'ping -c3 10.3.22.2'
        publishers:
                - ircbot:
                        strategy: any-failure
                        message-type: summary

- job:
        <<: *ping
        name: scm-sync-status
        description: Reports SCM Sync errors
        builders:
                - shell: |
                    ls -l scm-sync-configuration.*
                    if test -f scm-sync-configuration.fail.log; then
                      cat scm-sync-configuration.fail.log
                      test scm-sync-configuration.success.log -nt scm-sync-configuration.fail.log
                    fi

- job:
        <<: *ping
        name: apache2-running
        description: Check if apache2 is running
        builders:
                - shell: 'systemctl status apache2'

# project jobs

- project:
        name: amcheck
        git-url: https://github.com/petergeoghegan/amcheck.git
        jobs:
                - git-packages

- project:
        name: apgdiff
        git-url: https://salsa.debian.org/postgresql/apgdiff.git
        jobs:
                - git-packages

- project:
        name: bucardo
        git-url: https://salsa.debian.org/postgresql/bucardo.git
        jobs:
                - git-packages

- project:
        name: barman
        git-url: https://salsa.debian.org/postgresql/barman.git
        jobs:
                - git-packages

- project:
        name: bgw-replstatus
        git-url: https://github.com/mhagander/bgw_replstatus.git
        jobs:
                - git-packages-with-next

- project:
        name: check-pgactivity
        git-url: https://salsa.debian.org/Krysztophe-guest/check_pgactivity.git
        # needs DH 10
        backports: 'BACKPORTS=yes '
        jobs:
                - git-packages

- project:
        name: check-postgres
        git-url: https://salsa.debian.org/postgresql/check-postgres.git
        jobs:
                - git-packages

- project:
        name: citus
        git-url: https://github.com/citusdata/packaging.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: cstore-fdw
        git-url: https://salsa.debian.org/postgresql/cstore-fdw.git
        jobs:
                - git-packages-with-next

- project:
        name: first-last-agg
        git-url: https://salsa.debian.org/postgresql/first-last-agg.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: hypopg
        git-url: https://github.com/HypoPG/hypopg.git
        git-branch: master
        jobs:
                - git-packages-with-next

- project:
        name: ip4r
        git-url: https://salsa.debian.org/postgresql/ip4r.git
        jobs:
                - git-packages-with-next

- project:
        name: jsquery
        git-url: https://salsa.debian.org/postgresql/jsquery.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: libdbd-pg-perl
        git-url: https://salsa.debian.org/perl-team/modules/packages/libdbd-pg-perl.git
        jobs:
                - git-packages

- project:
        name: libtap-parser-sourcehandler-pgtap-perl
        git-url: https://salsa.debian.org/perl-team/modules/packages/libtap-parser-sourcehandler-pgtap-perl.git
        jobs:
                - git-packages

- project:
        name: libpgjava
        git-url: https://salsa.debian.org/java-team/libpostgresql-jdbc-java.git
        # needs dh 10
        # jessie: Error configuring: com.igormaznitsa:jcp. Reason: ERROR: Cannot override read-only parameter: destination in goal: jcp:preprocess
        # xenial: [ERROR] Failed to execute goal com.igormaznitsa:jcp:5.3.3:preprocess (preprocessTestSources) on project postgresql: Exception during preprocessor context creation: Can't find source directory [/<<PKGBUILDDIR>>/pgjdbc/target/generated-sources/annotations]
        dist-filter: '(distribution!="jessie" && distribution!="xenial")'
        backports: 'BACKPORTS=yes '
        jobs:
                - git-packages

- project:
        name: libpqtypes
        git-url: https://salsa.debian.org/postgresql/libpqtypes.git
        jobs:
                - git-packages

- project:
        name: libscram-java
        git-url: https://salsa.debian.org/java-team/libscram-java.git
        # needs dh 11
        dist-filter: '(distribution!="jessie" && distribution!="xenial")'
        backports: 'BACKPORTS=yes '
        jobs:
                - git-packages

- project:
        name: mimeo
        git-url: https://salsa.debian.org/postgresql/mimeo.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: omnidb
        git-url: https://salsa.debian.org/postgresql/omnidb.git
        dist-filter: '(distribution!="jessie") && (distribution!="xenial")'
        # needs dh 11 backport on stretch
        backports: 'BACKPORTS=yes '
        # needs python3-aes on stretch
        backports_runtime: 'BACKPORTS=yes '
        jobs:
                - git-packages

- project:
        name: ora2pg
        git-url: https://salsa.debian.org/postgresql/ora2pg.git
        # needs dh 10
        backports: 'BACKPORTS=yes '
        jobs:
                - git-packages

- project:
        name: orafce
        git-url: https://salsa.debian.org/postgresql/orafce.git
        jobs:
                - git-packages-with-next

- project:
        name: resource-agents-paf
        git-url: https://github.com/ClusterLabs/PAF.git
        dist-filter: '(distribution!="jessie")'
        # needs pacemaker backport on jessie, but jessie-backports is gone
        jobs:
                - git-packages

- project:
        name: periods
        git-url: https://salsa.debian.org/postgresql/periods.git
        jobs:
                - git-packages-with-next

- project:
        name: pg-activity
        git-url: https://anonscm.debian.org/git/users/kolter/pg-activity.git
        git-branch: unstable
        jobs:
                - git-packages

- project:
        name: pgadmin3
        git-url: https://salsa.debian.org/postgresql/pgadmin3.git
        jobs:
                - git-packages

- project:
        name: pgadmin4
        git-url: https://salsa.debian.org/postgresql/pgadmin4.git
        dist-filter: '(distribution!="jessie")'
        jobs:
                - git-packages

- project:
        name: pgagent
        git-url: https://salsa.debian.org/postgresql/pgagent.git
        jobs:
                - git-packages

- project:
        name: pgaudit
        git-url: https://salsa.debian.org/postgresql/pgaudit.git
        jobs:
                - git-packages-with-next

- project:
        name: pgbadger
        git-url: https://salsa.debian.org/postgresql/pgbadger.git
        jobs:
                - git-packages

- project:
        name: pgbackrest
        git-url: https://salsa.debian.org/postgresql/pgbackrest.git
        jobs:
                - git-packages

- project:
        name: pg-backup-ctl
        git-url: https://github.com/credativ/pg_backup_ctl.git
        jobs:
                - git-packages

- project:
        name: pgbouncer
        git-url: https://salsa.debian.org/postgresql/pgbouncer.git
        jobs:
                - git-packages

- project:
        name: pg-cloudconfig
        git-url: https://github.com/credativ/pg_cloudconfig.git
        backports: 'BACKPORTS=yes ' # make DH 10 available on jessie/xenial
        jobs:
                - git-packages

- project:
        name: pg-checksums
        git-url: https://salsa.debian.org/postgresql/pg-checksums.git
        jobs:
                - git-packages-with-next

- project:
        name: pg-cron
        git-url: https://salsa.debian.org/postgresql/pg-cron.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: pgcluu
        git-url: https://salsa.debian.org/postgresql/pgcluu.git
        backports: 'BACKPORTS=yes ' # DH 9 too old on xenial
        jobs:
                - git-packages

- project:
        name: pgdg-buildenv
        git-url: https://git.postgresql.org/git/pgapt.git
        jobs:
                - git-packages

- project:
        name: pg-dirtyread
        git-url: https://github.com/df7cb/pg_dirtyread.git
        jobs:
                - git-packages-with-next

- project:
        name: pgespresso
        git-url: https://salsa.debian.org/postgresql/pgespresso.git
        jobs:
                - git-packages # supports 9.2 .. 9.5 only

- project:
        name: pgextwlist
        git-url: https://github.com/dimitri/pgextwlist.git
        jobs:
                - git-packages-with-next

- project:
        name: pg-fact-loader
        git-url: https://github.com/enova/pg_fact_loader.git
        jobs:
                - git-packages-with-next

- project:
        name: pgfincore
        git-url: https://git.postgresql.org/git/pgfincore.git
        jobs:
                - git-packages-with-next

- project:
        name: pgformatter
        git-url: https://salsa.debian.org/postgresql/pgformatter.git
        # needs debhelper 10
        backports: 'BACKPORTS=yes '
        jobs:
                - git-packages

- project:
        name: pgloader
        git-url: https://github.com/dimitri/pgloader.git
        arch-filter: '(architecture!="ppc64el")'
        jobs:
                - git-packages

- project:
        name: pglogical
        git-url: https://salsa.debian.org/postgresql/pglogical.git
        jobs:
                - git-packages-with-next

- project:
        name: pglogical-ticker
        git-url: https://github.com/enova/pglogical_ticker.git
        jobs:
                - git-packages-with-next

- project:
        name: pgl-ddl-deploy
        git-url: https://github.com/enova/pgl_ddl_deploy.git
        jobs:
                - git-packages-with-next

- project:
        name: pgmemcache
        git-url: https://salsa.debian.org/postgresql/pgmemcache.git
        jobs:
                - git-packages-with-next

- project:
        name: pgmodeler
        git-url: https://salsa.debian.org/postgresql/pgmodeler.git
        # 1.9 excludes jessie: src/basetableview.cpp:174:88: error: no matching function for call to 'QTimer::singleShot(int, BaseTableView::mousePressEvent(QGraphicsSceneMouseEvent*)::__lambda0)'
        dist-filter: '(distribution!="jessie")'
        jobs:
                - git-packages

- project:
        name: pg-rage-terminator
        git-url: https://github.com/disco-stu/pg-rage-terminator-pkg.git
        jobs:
                - git-packages-with-next

- project:
        name: pg-rational
        git-url: https://salsa.debian.org/postgresql/pg-rational.git
        # needs gcc 5 for __builtin_sadd_overflow
        dist-filter: '(distribution!="jessie")'
        jobs:
                - git-packages-with-next

- project:
        name: pg-repack
        git-url: https://salsa.debian.org/postgresql/pg-repack.git
        jobs:
                - git-packages-with-next

- project:
        name: pg-similarity
        git-url: https://salsa.debian.org/postgresql/pg-similarity.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: pg-snakeoil
        git-url: https://github.com/credativ/pg_snakeoil.git
        jobs:
                - git-packages-with-next

- project:
        name: pg-partman
        git-url: https://salsa.debian.org/postgresql/pg-partman.git
        jobs:
                - git-packages-with-next

- project:
        name: pgpool2
        git-url: https://salsa.debian.org/postgresql/pgpool2.git
        jobs:
                - git-packages-with-next

- project:
        name: pg-qualstats
        git-url: https://github.com/powa-team/pg_qualstats.git
        jobs:
                - git-packages-with-next

- project:
        name: pgrouting
        git-url: https://salsa.debian.org/debian-gis-team/pgrouting.git
        # exclude jessie because postgis excludes it
        dist-filter: '(distribution!="jessie")'
        jobs:
                - git-packages-with-next

- project:
        name: pgsphere
        git-url: https://salsa.debian.org/postgresql/pgsphere.git
        jobs:
                - git-packages

- project:
        name: pgstat
        git-url: https://salsa.debian.org/Krysztophe-guest/pgstat.git
        # needs DH 10
        backports: 'BACKPORTS=yes '
        jobs:
                - git-packages

- project:
        name: pg-stat-kcache
        git-url: https://github.com/powa-team/pg_stat_kcache.git
        jobs:
                - git-packages-with-next

- project:
        name: pgsql-asn1oid
        git-url: https://github.com/df7cb/pgsql-asn1oid.git
        jobs:
                - git-packages-with-next

- project:
        name: pgsql-ogr-fdw
        git-url: https://salsa.debian.org/debian-gis-team/pgsql-ogr-fdw.git
        # needs DH 10
        backports: 'BACKPORTS=yes '
        jobs:
                - git-packages-with-next

- project:
        name: pgtap
        git-url: https://salsa.debian.org/postgresql/pgtap.git
        jobs:
                - git-packages-with-next

- project:
        name: pgtop
        git-url: https://salsa.debian.org/postgresql/pgtop.git
        # needs DH 10
        backports: 'BACKPORTS=yes '
        jobs:
                - git-packages

- project:
        name: pgxnclient
        git-url: https://salsa.debian.org/postgresql/pgxnclient.git
        # needs DH 11
        dist-filter: '(distribution!="jessie") && (distribution!="xenial")'
        backports: 'BACKPORTS=yes '
        jobs:
                - git-packages

- project:
        name: pldebugger
        git-url: https://salsa.debian.org/postgresql/pldebugger.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: plr
        git-url: https://salsa.debian.org/postgresql/plr.git
        jobs:
                - git-packages-with-next

- project:
        name: postgis
        git-url: https://salsa.debian.org/debian-gis-team/postgis.git
        dist-filter: '(distribution!="jessie")'
        jobs:
                - git-packages-with-next

- project:
        name: patroni
        git-url: https://salsa.debian.org/postgresql/patroni.git
        dist-filter: '(distribution!="jessie") && (distribution!="xenial")'
        jobs:
                - git-packages

- project:
        name: postgis-java
        git-url: https://salsa.debian.org/debian-gis-team/postgis-java.git
        # needs default-jdk-headless (not available on jessie)
        # needs newer libpgjava (xenial: [ERROR] Failed to execute goal on project postgis-jdbc: Could not resolve dependencies for project net.postgis:postgis-jdbc:jar:2.2.1: Cannot access central (https://repo.maven.apache.org/maven2) in offline mode and the artifact org.postgresql:postgresql:jar:debian has not been downloaded from it before.)
        dist-filter: '(distribution!="jessie" && distribution!="xenial")'
        jobs:
                - git-packages

- project:
        name: postgresql-8.2
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: '8.2-pgdg'
        dist-filter: '(distribution=="sid")'
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-8.3
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: '8.3-pgdg'
        dist-filter: '(distribution=="sid")'
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-8.4
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: '8.4-pgdg'
        dist-filter: '(distribution=="sid")'
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-9.0
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: '9.0-pgdg'
        dist-filter: '(distribution=="sid")'
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-9.1
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: 9.1
        dist-filter: '(distribution=="sid")'
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-9.2
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: 9.2
        dist-filter: '(distribution=="sid")'
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-9.3
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: 9.3
        dist-filter: '(distribution=="sid")'
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-9.4
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: 9.4
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-9.5
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: 9.5
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-9.6
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: 9.6
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-10
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: 10
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-11
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: 11
        jobs:
                - git-packages-split-autopkgtest

- project:
        name: postgresql-12
        git-url: https://salsa.debian.org/postgresql/postgresql.git
        git-branch: 12
        # don't support PG12 on cosmic, it won't be released before cosmic's EOL
        #dist-filter: '(distribution!="cosmic")'
        jobs:
                - git-packages-split-autopkgtest

# the PostgreSQL devel version:
- project:
        name: postgresql-13
        git-url: https://git.postgresql.org/git/postgresql.git
        git-branch: origin/master
        merge-branch: 13
        jobs:
                - git-packages-split-autopkgtest-with-git

- project:
        name: postgresql-common
        git-url: https://salsa.debian.org/postgresql/postgresql-common.git
        jobs:
                - git-packages

- project:
        name: postgresql-debversion
        git-url: https://salsa.debian.org/postgresql/postgresql-debversion.git
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-filedump
        git-url: https://salsa.debian.org/postgresql/postgresql-filedump.git
        jobs:
                - git-packages

- project:
        name: postgresql-hll
        git-url: https://salsa.debian.org/postgresql/postgresql-hll.git
        arch-filter: '(architecture!="i386")'
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-multicorn
        git-url: https://salsa.debian.org/postgresql/postgresql-multicorn.git
        disable_submodules: true
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-mysql-fdw
        git-url: https://salsa.debian.org/postgresql/postgresql-mysql-fdw.git
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-numeral
        git-url: https://github.com/df7cb/postgresql-numeral.git
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-pgmp
        git-url: https://salsa.debian.org/postgresql/postgresql-pgmp.git
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-pljava
        git-url: https://salsa.debian.org/postgresql/postgresql-pljava.git
        # Java 7 not fully supported
        dist-filter: '(distribution!="jessie")'
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-pllua
        git-url: https://salsa.debian.org/postgresql/postgresql-pllua.git
        # lua5.3 in jessie-backports
        dist-filter: '(distribution!="jessie")'
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-plproxy
        git-url: https://salsa.debian.org/postgresql/postgresql-plproxy.git
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-plsh
        git-url: https://salsa.debian.org/postgresql/postgresql-plsh.git
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-prioritize
        git-url: https://salsa.debian.org/postgresql/postgresql-prioritize.git
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-q3c
        git-url: https://salsa.debian.org/postgresql/postgresql-q3c.git
        jobs:
                - git-packages

- project:
        name: postgresql-rum
        git-url: https://salsa.debian.org/postgresql/postgresql-rum.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-unit
        git-url: https://github.com/df7cb/postgresql-unit.git
        jobs:
                - git-packages-with-next

- project:
        name: powa-archivist
        git-url: https://github.com/powa-team/powa-archivist.git
        git-branch: master
        jobs:
                - git-packages-with-next

- project:
        name: prefix
        git-url: https://github.com/dimitri/prefix.git
        jobs:
                - git-packages-with-next

- project:
        name: preprepare
        git-url: https://github.com/dimitri/preprepare.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: prometheus-sql-exporter
        git-url: https://github.com/credativ/sql_exporter
        git-branch: debian
        dist-filter: '(distribution!="jessie") && (distribution!="xenial")'
        backports: 'BACKPORTS=yes ' # golang-* backports
        jobs:
                - git-packages

- project:
        name: pspg
        git-url: https://salsa.debian.org/postgresql/pspg.git
        jobs:
                - git-packages

- project:
        name: psqlodbc
        git-url: https://salsa.debian.org/postgresql/psqlodbc.git
        jobs:
                - git-packages

- project:
        name: psycopg2
        git-url: https://salsa.debian.org/python-team/modules/psycopg2.git
        git-branch: debian/master
        dist-filter: '(distribution!="jessie")' # same as pgadmin4
        jobs:
                - git-packages

- project:
        name: repmgr
        git-url: https://salsa.debian.org/postgresql/repmgr.git
        jobs:
                - git-packages-with-next

- project:
        name: rdkit
        git-url: https://salsa.debian.org/debichem-team/rdkit.git
        jobs:
                - git-packages-with-next

- project:
        name: slony1-2
        git-url: https://salsa.debian.org/postgresql/slony1-2.git
        jobs:
                - git-packages-with-next

- project:
        name: sqlsmith
        git-url: https://github.com/anse1/sqlsmith.git
        git-branch: debian
        jobs:
                - git-packages

- project:
        name: toastinfo
        git-url: https://github.com/credativ/toastinfo.git
        jobs:
                - git-packages-with-next

- project:
        name: wal2json
        git-url: https://salsa.debian.org/postgresql/wal2json.git
        jobs:
                - git-packages-with-next

# upgrade tests

# lowest supported "upgrade from" version is 8.4, "upgrade to" 9.2
- project: { name: upgrade-8.4-9.2, oldversion: 8.4, newversion: 9.2, jobs: [ upgrade-sid ] }
- project: { name: upgrade-9.0-9.2, oldversion: 9.0, newversion: 9.2, jobs: [ upgrade-sid ] }
- project: { name: upgrade-9.1-9.2, oldversion: 9.1, newversion: 9.2, jobs: [ upgrade-sid ] }
- project: { name: upgrade-9.2-9.3, oldversion: 9.2, newversion: 9.3, jobs: [ upgrade-sid ] }
- project: { name: upgrade-9.3-9.4, oldversion: 9.3, newversion: 9.4, jobs: [ upgrade-sid ] }
- project: { name: upgrade-9.4-9.5, oldversion: 9.4, newversion: 9.5, jobs: [ upgrade ] }
- project: { name: upgrade-9.5-9.6, oldversion: 9.5, newversion: 9.6, jobs: [ upgrade ] }
- project: { name: upgrade-9.6-10,  oldversion: 9.6, newversion: 10,  jobs: [ upgrade ] }
- project: { name: upgrade-10-11,   oldversion: 10,  newversion: 11,  jobs: [ upgrade ] }
- project: { name: upgrade-11-12,   oldversion: 11,  newversion: 12,  jobs: [ upgrade ] }
- project: { name: upgrade-12-13,   oldversion: 12,  newversion: 13,  jobs: [ upgrade-git-head ] }

# larger jumps:
- project: { name: upgrade-9.4-11,  oldversion: 9.4, newversion: 11,  jobs: [ upgrade ] }
- project: { name: upgrade-9.6-12,  oldversion: 9.6, newversion: 12,  jobs: [ upgrade ] }
- project: { name: upgrade-9.6-13,  oldversion: 9.6, newversion: 13,  jobs: [ upgrade-git-head ] }

# PgQ

- project:
        name: londiste
        git-url: https://salsa.debian.org/postgresql/londiste.git
        git-branch: debian
        dist-filter: '(distribution!="jessie")' # python3.5
        jobs:
                - git-packages

- project:
        name: pgq
        git-url: https://salsa.debian.org/postgresql/pgq.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: pgqd
        git-url: https://salsa.debian.org/postgresql/pgqd.git
        git-branch: debian
        jobs:
                - git-packages

- project:
        name: pgq-node
        git-url: https://salsa.debian.org/postgresql/pgq-node.git
        git-branch: debian
        jobs:
                - git-packages-with-next

- project:
        name: python-pgq
        git-url: https://salsa.debian.org/postgresql/python-pgq.git
        git-branch: debian
        dist-filter: '(distribution!="jessie")' # python3.5
        jobs:
                - git-packages

- project:
        name: python-skytools
        git-url: https://salsa.debian.org/postgresql/python-skytools.git
        git-branch: debian
        dist-filter: '(distribution!="jessie")' # python3.5
        jobs:
                - git-packages

##
