# defaults and macros

- defaults:
    name: global
    description: 'Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
    logrotate:
        daysToKeep: -1
        numToKeep: 2
        artifactDaysToKeep: -1
        artifactNumToKeep: -1
    wrappers:
        - timestamps

- yamltemplates:
    name: yamltemplates

    queue_choice: &queue_choice
            name: queue
            choices:
                    - incoming
                    - private
                    - discard
            description: 'Incoming queue to use: incoming uploads to reprepro, private stages the upload in a directory, discard throws the upload away.'

    buildtype_choice: &buildtype_choice
            name: buildtype
            choices:
                    - snapshot
                    - snapshot-dot
                    - normal
            description: 'snapshot: if changelog is UNRELEASED, build a snapshot tarball with a ~date version. With snapshot-dot, use a .date version.'

    arch_axis: &arch_axis
            type: user-defined
            name: architecture
            values:
                    - amd64
                    - i386

    amd64_only_axis: &amd64_only_axis
            type: user-defined
            name: architecture
            values: [amd64]

    dist_axis: &dist_axis
            type: user-defined
            name: distribution
            values:
                    - sid
                    - jessie
                    - wheezy
                    - squeeze
                    - utopic
                    - trusty
                    - precise
                    - lucid

    sid_only_axis: &sid_only_axis
            type: user-defined
            name: distribution
            values: [sid]

    ircbot_only_configs: &only_configs
            strategy: any-failure
            message-type: summary
            matrix-notifier: only-configurations

    add_version_tag: &add_version_tag |
            import java.util.regex.Matcher;
            for (a in manager.build.getArtifacts()) {{
                    m = (a =~ /.*_(.*)\.dsc/);
                    if (m.matches()) {{
                            manager.addShortText(m[0][1]);
                            break;
                    }}
            }}

# apt template

- job-template: &apt_source_template
        name: '{name}-apt-source'
        job-name: '{name}-source'
        description: 'Build Debian source package of {name} from "apt-get source".<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        project-type: matrix
        parameters:
                - string: &revision_string
                        name: revision
                        default: '1'
                        description: Revision number to use on generated source package (number in .pgdg+N suffix)
                - choice: *queue_choice
        execution-strategy:
                sequential: true
                combination-filter: '{dist-filter}'
                touchstone:
                        expr: 'distribution=="sid"'
        axes:
                - axis: *dist_axis
        builders:
                - shell: 'generate-pgdg-source'
        publishers:
                - archive:
                        artifacts: 'result/*'
                        latest-only: true
                - fingerprint:
                        record-artifacts: true
                - ircbot:
                        matrix-notifier: only-parent
                - trigger-parameterized-builds:
                        - project: '{name}-binaries'
                          condition: SUCCESS
                          predefined-parameters: 'queue=$queue'
                - groovy-postbuild: *add_version_tag

# bzr template

- job-template: &bzr_source_template
        <<: *apt_source_template
        name: '{name}-bzr-source'
        description: 'Build Debian source package of {name} from bzr.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        scm:
                - bzr:
                        url: 'http://anonscm.debian.org/bzr/pkg-postgresql/{bzr-branch}/'
                        loggerhead: 'https://alioth.debian.org/scm/loggerhead/pkg-postgresql/{bzr-branch}'

- job-template:
        <<: *bzr_source_template
        name: '{name}-bzr-source-lp'
        scm:
                - bzr:
                        url: '{bzr-branch}'

# git template

- job-template: &git_source_template
        <<: *apt_source_template
        name: '{name}-git-source'
        description: 'Build Debian source package of {name} from git.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        parameters:
                - string: &git_branch
                        name: branch
                        default: '{git-branch}'
                        description: Git branch, tag, or commit to build
                - string: *revision_string
                - choice: *queue_choice
        scm:
                - git:
                        url: '{git-url}'
                        branches:
                                - '$branch'
                        basedir: source
                        wipe-workspace: false
                        recursive-submodules: true

# special git+bzr job for postgresql-devel
- job-template:
        <<: *git_source_template
        name: '{source-name}-source-git-head'
        job-name: '{source-name}-source-git-head'
        parameters:
                - string: *git_branch
                - choice:
                        name: merge
                        choices:
                                - 'bzr::http://anonscm.debian.org/bzr/pkg-postgresql/{source-name}/trunk/'
                        description: 'Branch to merge with before build'
                - string: *revision_string
                - choice: *queue_choice
                - choice: *buildtype_choice
        triggers:
                - pollscm: "H */6 * * *"
        axes:
                - axis: *sid_only_axis
        scm:
                - git:
                        url: '{git-url}'
                        reference-repo: '$HOME/gitcache.buexcl/postgresql'
                        branches:
                                - '$branch'
                        basedir: source
                        wipe-workspace: false
        publishers:
                - archive:
                        artifacts: 'result/*'
                        latest-only: true
                - fingerprint:
                        record-artifacts: true
                - ircbot:
                        matrix-notifier: only-parent
                - trigger-parameterized-builds:
                        - project: '{source-name}-binaries-sid-amd64'
                          condition: SUCCESS
                          predefined-parameters: 'queue=$queue'
                - groovy-postbuild: *add_version_tag

# svn template

- job-template:
        <<: *apt_source_template
        name: '{name}-svn-source'
        description: 'Build Debian source package of {name} from svn.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        scm:
                - svn:
                        url: '{svn-url}'
                        basedir: source
                        workspaceupdater: update

# binaries template

- job-template: &binaries_template
        name: '{name}-binaries'
        description: 'Build Debian binary package of {name}.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        project-type: matrix
        parameters:
                - choice: *queue_choice
        execution-strategy:
                combination-filter: '{dist-filter}'
                touchstone:
                        expr: '(distribution=="sid") && (architecture=="amd64")'
        axes:
                - axis: *arch_axis
                - axis: *dist_axis
        builders:
                - shell: 'rm -rf *'
                - copyartifact: &copysource
                        project: '{name}-source/distribution=$distribution'
                        filter: 'result/*'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                - shell: 'BUILD_ONLY=yes {noadt}build-and-provide-package'
        publishers:
                - archive: &binaries_archive
                        artifacts: '*.gz,*.bz2,*.xz,*.deb,*.dsc,*.changes'
                        latest-only: true
                - fingerprint:
                        record-artifacts: true
                - junit:
                        results: autopkgtest.xml
                - ircbot: *only_configs
                - trigger-parameterized-builds: &next_job_trigger
                        - project: '{next-job}'
                          condition: SUCCESS
                          predefined-parameters: "binaries=$JOB_NAME\nqueue=$queue"
                - groovy-postbuild: *add_version_tag
                - workspace-cleanup

# same as {name}-binaries, but running sequentially
- job-template:
        name: '{name}-binaries-sequential'
        job-name: '{name}-binaries'
        <<: *binaries_template
        description: 'Build Debian binary package of {name}, running configurations sequentially.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        execution-strategy:
                combination-filter: '{dist-filter}'
                sequential: true
                touchstone:
                        expr: '(distribution=="sid") && (architecture=="amd64")'

# same as {name}-binaries, but triggers -beta and -devel builds on success
- job-template:
        <<: *binaries_template
        job-name: '{name}-binaries'
        name: '{name}-binaries-with-next'
        publishers:
                - archive: *binaries_archive
                - fingerprint:
                        record-artifacts: true
                - junit:
                        results: autopkgtest.xml
                - ircbot: *only_configs
                - trigger-parameterized-builds: *next_job_trigger
#                - trigger-parameterized-builds:
#                        - project: '{name}-binaries-beta'
#                          condition: SUCCESS
#                          predefined-parameters: "queue=$queue"
                - trigger-parameterized-builds:
                        - project: '{name}-binaries-devel'
                          condition: SUCCESS
                          predefined-parameters: "queue=$queue"
                - groovy-postbuild: *add_version_tag
                - workspace-cleanup

# binaries triggered from -source-git-head
- job-template:
        <<: *binaries_template
        name: '{source-name}-binaries-sid-amd64'
        #job-name: '{name}-binaries'
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: '{source-name}-source-git-head/distribution=$distribution'
                        filter: 'result/*'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                - shell: 'BUILD_ONLY=yes {noadt}build-and-provide-package'
        axes:
                - axis: *amd64_only_axis
                - axis: *dist_axis

# binaries for building modules for PostgreSQL beta
- job-template:
        <<: *binaries_template
        name: '{name}-binaries-beta'
        builders:
                - shell: 'rm -rf *'
                - copyartifact: *copysource
                - shell: 'PG_SUPPORTED_VERSIONS="9.4" BUILD_ONLY=yes build-and-provide-package'

# binaries for building modules for PostgreSQL devel
- job-template:
        <<: *binaries_template
        name: '{name}-binaries-devel'
        axes:
                - axis: *amd64_only_axis
                - axis: *sid_only_axis
        builders:
                - shell: 'rm -rf *'
                - copyartifact: *copysource
                - shell: 'PG_SUPPORTED_VERSIONS="9.5" BUILD_ONLY=yes build-and-provide-package'

# testsuite template

- job-template: &testsuite_template
        name: '{name}-testsuite'
        description: 'Run the postgresql-common testsuite on {name}.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        project-type: matrix
        parameters:
                - choice: *queue_choice
        execution-strategy:
                combination-filter: '{dist-filter}'
                touchstone:
                        expr: '(distribution=="sid") && (architecture=="amd64")'
        axes:
                - axis: *arch_axis
                - axis: *dist_axis
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: '{name}-binaries/architecture=$architecture,distribution=$distribution'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                - shell: 'postgresql-testsuite'
        publishers:
                - fingerprint:
                        files: '*.gz,*.bz2,*.xz,*.deb,*.dsc,*.changes'
                - ircbot: *only_configs
                - trigger-parameterized-builds:
                        - project: 'dput'
                          condition: SUCCESS
                          predefined-parameters: "binaries={name}-binaries\nqueue=$queue"
                - workspace-cleanup

- job-template:
        <<: *testsuite_template
        name: '{source-name}-testsuite-sid-amd64'
        #job-name: '{name}-testsuite'
        axes:
                - axis: *amd64_only_axis
                - axis: *dist_axis
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: '{source-name}-binaries-sid-amd64/architecture=$architecture,distribution=$distribution'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                - shell: 'postgresql-testsuite'
        publishers:
                - fingerprint:
                        files: '*.gz,*.bz2,*.xz,*.deb,*.dsc,*.changes'
                - ircbot: *only_configs
                - trigger-parameterized-builds:
                        - project: 'dput'
                          condition: SUCCESS
                          predefined-parameters: "binaries={source-name}-binaries-sid-amd64\nqueue=$queue"
                - workspace-cleanup

# upgrade test template

- job-template: &upgrade_template
        name: 'upgrade-{oldversion}-{newversion}'
        description: 'Test upgrades from {oldversion} to {newversion}.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        project-type: matrix
        execution-strategy:
                touchstone:
                        expr: '(distribution=="sid") && (architecture=="amd64")'
        axes:
                - axis: *arch_axis
                - axis: *dist_axis
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: 'postgresql-{oldversion}-binaries/architecture=$architecture,distribution=$distribution'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                - copyartifact:
                        project: 'postgresql-{newversion}-binaries/architecture=$architecture,distribution=$distribution'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                - shell: 'postgresql-testsuite'
        publishers:
                - fingerprint:
                        files: '*.gz,*.bz2,*.xz,*.deb,*.dsc,*.changes'
                - ircbot: *only_configs
                - workspace-cleanup

- job-template:
        <<: *upgrade_template
        name: 'upgrade-{oldversion}-{newversion}-sid-amd64'
        job-name: 'upgrade-{oldversion}-{newversion}'
        axes:
                - axis: *amd64_only_axis
                - axis: *sid_only_axis

# job groups

- job-group:
        name: apt-packages
        jobs:
                - '{name}-apt-source'
                - '{name}-binaries'
        next-job: dput
        noadt: ''

- job-group:
        name: bzr-packages
        jobs:
                - '{name}-bzr-source'
                - '{name}-binaries'
        next-job: dput
        noadt: ''

- job-group:
        name: bzr-packages-lp
        jobs:
                - '{name}-bzr-source-lp'
                - '{name}-binaries'
        next-job: dput
        noadt: ''

- job-group:
        name: bzr-packages-adt
        jobs:
                - '{name}-bzr-source'
                - '{name}-binaries'
                - '{name}-testsuite'
        #next-job: '{name}-testsuite' -- doesn't resolve {name} (needs to be set manually in the job)
        noadt: 'ADT=skip '

- job-group:
        name: git-packages
        jobs:
                - '{name}-git-source'
                - '{name}-binaries'
        next-job: dput
        noadt: ''

- job-group:
        name: git-packages-sequential
        jobs:
                - '{name}-git-source'
                - '{name}-binaries-sequential'
        next-job: dput
        noadt: ''

- job-group:
        name: git-packages-with-next
        jobs:
                - '{name}-git-source'
                - '{name}-binaries-with-next'
#                - '{name}-binaries-beta'
                - '{name}-binaries-devel'
        next-job: dput
        noadt: ''

- job-group:
        name: svn-packages
        jobs:
                - '{name}-svn-source'
                - '{name}-binaries'
        next-job: dput
        noadt: ''

- job-group:
        name: upgrade-job
        jobs:
                - 'upgrade-{oldversion}-{newversion}'

# simple jobs

- job:
        name: apt.postgresql.org
        description: 'Update configuration on build and repository hosts.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        scm:
                - git:
                        url: git://git.postgresql.org/git/pgapt.git
                        branches:
                                - master
                        wipe-workspace: false
        builders:
                - shell: 'cd jenkins && make test && make update'
        publishers:
                - ircbot:
                        matrix-notifier: all

- job:
        name: 'cowbuilder-update'
        description: 'Update/create cowbuilder chroots.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        project-type: matrix
        execution-strategy:
                sequential: true
                touchstone:
                        expr: '(distribution=="sid") && (architecture=="amd64")'
        axes:
                - axis: *arch_axis
                - axis: *dist_axis
        builders:
                - shell: 'COWBUILDER_UPDATE_ONLY=yes build-and-provide-package'
        publishers:
                - ircbot: *only_configs

- job:
        name: dput
        description: 'Push packages to the repository.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        logrotate:
                numToKeep: 50
        parameters:
                - string:
                        name: binaries
                        description: Name of binaries job to copy artifacts from (including -binaries suffix)
                - choice: *queue_choice
        builders:
                - shell: 'rm -rf *'
                - copyartifact:
                        project: '$binaries'
                        filter: '*.gz,*.bz2,*.xz,*.deb,*.dsc,*.changes'
                        flatten: true
                        which-build: upstream-build
                        fallback-to-last-successful: true
                - shell: 'dput-pgdg $queue'
        publishers:
                - ircbot:
                        matrix-notifier: all
                        message-type: summary-params
                - groovy-postbuild: 'manager.addShortText("${manager.build.environment.binaries} (${manager.build.environment.queue})")'

- job:
        name: promote
        description: 'Promotes packages from the *-pgdg-testing distributions to *-pgdg.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        logrotate:
                numToKeep: 50
        parameters:
                - string:
                        name: package
                        description: 'Name of source package to promote (no "-source" suffix)'
                - string:
                        name: distributions
                        description: 'Distributions to promote (space-separated, default "all")'
                        default: 'all'
        builders:
                - shell: 'ssh atalia.postgresql.org promote -d "$distributions" $package'
        publishers:
                - ircbot:
                        matrix-notifier: all
                        message-type: summary-params
                - groovy-postbuild: 'manager.addShortText("${manager.build.environment.package} (${manager.build.environment.distributions})")'

- job:
        name: upgrade-plperl
        description: 'Test plperl upgrades.<br />Do not edit this job through the web interface, it is generated via jenkins-job-builder!'
        project-type: matrix
        execution-strategy:
                touchstone:
                        expr: '(distribution=="wheezy") && (architecture=="amd64")'
        axes:
                - axis: *arch_axis
                - axis:
                        type: user-defined
                        name: distribution
                        values: [wheezy, squeeze]
        builders:
                - shell: 'sudo cowbuilder --execute $(which upgrade-plperl) --basepath /home/pbuilder/base-$distribution-$architecture.cow'

- job:
        name: gitcache-postgresql
        description: Reference repository postgresql source jobs
        workspace: '$HOME/gitcache.buexcl/postgresql'
        scm:
                - git:
                        url: git://git.postgresql.org/git/postgresql.git
                        branches:
                                - master
                        wipe-workspace: false
        triggers:
                - pollscm: "H */6 * * *"

# project jobs

- project:
        name: apgdiff
        svn-url: svn://svn.debian.org/pkg-postgresql/trunk/apgdiff
        dist-filter: ''
        jobs:
                - svn-packages

- project:
        name: autopkgtest
        git-url: git://anonscm.debian.org/autopkgtest/autopkgtest.git
        git-branch: master
        # limit to distributions with python3
        dist-filter: '(distribution!="squeeze") && (distribution!="precise") && (distribution!="lucid")'
        jobs:
                - git-packages

- project:
        name: barman
        git-url: git://git.debian.org/collab-maint/barman.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: check-postgres
        git-url: git://anonscm.debian.org/pkg-postgresql/check-postgres.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: gdal
        # sid and trusty are current enough
        dist-filter: '(distribution=="wheezy") || (distribution=="precise")'
        jobs:
                - apt-packages

- project:
        name: geos
        # sid and trusty are current enough
        dist-filter: '(distribution=="wheezy") || (distribution=="precise")'
        jobs:
                - apt-packages

- project:
        name: ip4r
        git-url: git://anonscm.debian.org/pkg-postgresql/ip4r.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: libdbd-pg-perl
        dist-filter: ''
        jobs:
                - apt-packages

- project:
        name: libpqtypes
        git-url: git://anonscm.debian.org/pkg-postgresql/libpqtypes.git
        git-branch: master
        # skip dists without dpkg-buildflags
        dist-filter: '(distribution!="squeeze") && (distribution!="lucid")'
        # run sequentially so the tests have 5432 available
        jobs:
                - git-packages-sequential

- project:
        name: newpid
        git-url: https://github.com/ChristophBerg/newpid.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: ora2pg
        dist-filter: ''
        jobs:
                - apt-packages

- project:
        name: orafce
        git-url: git://anonscm.debian.org/pkg-postgresql/orafce.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: pgadmin3
        git-url: git://anonscm.debian.org/pkg-postgresql/pgadmin3.git
        git-branch: master
        # skip dists without /usr/share/dpkg/buildflags.mk
        dist-filter: '(distribution!="squeeze") && (distribution!="lucid")'
        jobs:
                - git-packages

- project:
        name: pgagent
        git-url: git://anonscm.debian.org/pkg-postgresql/pgagent.git
        git-branch: master
        # lucid doesn't have "timeout"
        dist-filter: 'distribution!="lucid"'
        jobs:
                - git-packages

- project:
        name: pgbadger
        dist-filter: ''
        jobs:
                - apt-packages

- project:
        name: pgbouncer
        git-url: git://anonscm.debian.org/pkg-postgresql/pgbouncer.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: pgdg-buildenv
        git-url: https://github.com/ChristophBerg/pgdg-buildenv.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: pgespresso
        git-url: git://git.debian.org/collab-maint/pgespresso.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: pgextwlist
        git-url: https://github.com/dimitri/pgextwlist.git
        git-branch: master
        # lucid doesn't accept the plugins symlink in the testsuite for whatever reason
        dist-filter: 'distribution!="lucid"'
        jobs:
                - git-packages-with-next

- project:
        name: pgloader
        git-url: https://github.com/dimitri/pgloader.git
        git-branch: master
        # build on sid (and maybe copy the result to other suites)
        dist-filter: 'distribution=="sid"'
        jobs:
                #- git-packages
                - apt-packages

- project:
        name: pgfincore
        git-url: git://git.postgresql.org/git/pgfincore.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: pgmemcache
        git-url: git://anonscm.debian.org/pkg-postgresql/pgmemcache.git
        git-branch: master
        dist-filter: 'distribution!="lucid"'
        jobs:
                - git-packages-with-next

- project:
        name: pg-reorg
        git-url: git://anonscm.debian.org/pkg-postgresql/pg-reorg.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: pgpool2
        git-url: git://anonscm.debian.org/pkg-postgresql/pgpool2.git
        git-branch: master
        dist-filter: '(distribution!="lucid")'
        jobs:
                - git-packages

- project:
        name: pgrouting
        git-url: git://anonscm.debian.org/pkg-grass/pgrouting.git
        git-branch: master
        # needs libcgal-dev (in non-free on squeeze, in multiverse on lucid/precise, let's not care)
        dist-filter: '(distribution!="lucid") && (distribution!="precise") && (distribution!="squeeze")'
        jobs:
                - git-packages

- project:
        name: pgsphere
        git-url: https://alioth.debian.org/anonscm/git/debian-science/packages/pgsphere.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: pgstatplans
        git-url: https://github.com/2ndQuadrant/pg_stat_plans.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: pgxnclient
        git-url: git://git.debian.org/pkg-postgresql/pgxnclient.git
        git-branch: master
        dist-filter: '(distribution!="squeeze") && (distribution!="lucid")'
        jobs:
                - git-packages

- project:
        name: phppgadmin
        git-url: git://anonscm.debian.org/pkg-postgresql/phppgadmin.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: plr
        git-url: git://anonscm.debian.org/pkg-postgresql/plr.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: plv8
        git-url: git://anonscm.debian.org/pkg-postgresql/plv8.git
        git-branch: debian
        dist-filter: '(distribution!="squeeze") && (distribution!="lucid")'
        jobs:
                - git-packages-with-next

- project:
        name: postgis
        git-url: git://git.debian.org/git/pkg-grass/postgis.git
        git-branch: master
        dist-filter: '(distribution!="squeeze") && (distribution!="lucid")'
        # run sequentially so the tests have 5432 available
        jobs:
                - git-packages-sequential

- project:
        name: postgresql-8.4
        bzr-branch: postgresql-8.4/pgdg
        dist-filter: ''
        jobs:
                - bzr-packages-adt
        next-job: 'postgresql-8.4-testsuite'

- project:
        name: postgresql-9.0
        bzr-branch: postgresql-9.0/pgdg
        dist-filter: ''
        jobs:
                - bzr-packages-adt
        next-job: 'postgresql-9.0-testsuite'

- project:
        name: postgresql-9.1
        bzr-branch: postgresql-9.1/trunk
        dist-filter: ''
        jobs:
                - bzr-packages-adt
        next-job: 'postgresql-9.1-testsuite'

- project:
        name: postgresql-9.2
        bzr-branch: postgresql-9.2/trunk
        dist-filter: ''
        jobs:
                - bzr-packages-adt
        next-job: 'postgresql-9.2-testsuite'

- project:
        name: postgresql-9.3
        bzr-branch: postgresql-9.3/trunk
        dist-filter: ''
        jobs:
                - bzr-packages-adt
        next-job: 'postgresql-9.3-testsuite'

- project:
        name: postgresql-9.4
        bzr-branch: postgresql-9.4/trunk
        dist-filter: ''
        jobs:
                - bzr-packages-adt
        next-job: 'postgresql-9.4-testsuite'

# the PostgreSQL devel versions:
- project:
        name: postgresql-9.4-devel
        source-name: postgresql-9.4
        git-url: git://git.postgresql.org/git/postgresql.git
        git-branch: origin/REL9_4_STABLE
        bzr-branch: postgresql-9.4/trunk
        dist-filter: 'distribution=="sid"'
        jobs:
                - '{source-name}-source-git-head'
                - '{source-name}-binaries-sid-amd64'
                - '{source-name}-testsuite-sid-amd64'
        next-job: postgresql-9.4-testsuite-sid-amd64
        noadt: 'ADT=skip '

- project:
        name: postgresql-9.5-devel
        source-name: postgresql-9.5
        git-url: git://git.postgresql.org/git/postgresql.git
        git-branch: origin/master
        bzr-branch: postgresql-9.5/trunk
        dist-filter: 'distribution=="sid"'
        jobs:
                - '{source-name}-source-git-head'
                - '{source-name}-binaries-sid-amd64'
                - '{source-name}-testsuite-sid-amd64'
        next-job: postgresql-9.5-testsuite-sid-amd64
        noadt: 'ADT=skip '

- project:
        name: postgresql-common
        git-url: git://anonscm.debian.org/pkg-postgresql/postgresql-common.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: postgresql-debversion
        git-url: git://git.debian.org/git/buildd-tools/postgresql-debversion
        git-branch: debian
        # lucid's autotools-dev doesn't contain /usr/share/perl5/Debian/Debhelper/Sequence/autotools_dev.pm
        dist-filter: 'distribution!="lucid"'
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-filedump
        git-url: git://anonscm.debian.org/pkg-postgresql/postgresql-filedump.git
        git-branch: master
        # uses /usr/share/dpkg/buildflags.mk
        dist-filter: '(distribution!="squeeze") && (distribution!="lucid")'
        jobs:
                - git-packages

- project:
        name: postgresql-multicorn
        git-url: git://anonscm.debian.org/pkg-postgresql/postgresql-multicorn.git
        git-branch: master
        # needs dh-python
        dist-filter: '(distribution!="squeeze") && (distribution!="lucid") && (distribution!="precise")'
        jobs:
                - git-packages

- project:
        name: postgresql-pgmp
        git-url: git://anonscm.debian.org/pkg-postgresql/postgresql-pgmp.git
        git-branch: master
        dist-filter: '(distribution!="squeeze") && (distribution!="lucid")'
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-pljava
        git-url: git://anonscm.debian.org/pkg-postgresql/postgresql-pljava.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-pllua
        git-url: git://anonscm.debian.org/pkg-postgresql/postgresql-pllua.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-plproxy
        git-url: git://anonscm.debian.org/pkg-postgresql/postgresql-plproxy.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: postgresql-plsh
        git-url: git://anonscm.debian.org/pkg-postgresql/postgresql-plsh.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: prefix
        git-url: git://github.com/dimitri/prefix.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: preprepare
        git-url: git://github.com/dimitri/preprepare.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages-with-next

- project:
        name: psqlodbc
        git-url: git://anonscm.debian.org/pkg-postgresql/psqlodbc.git
        git-branch: master
        # doesn't compile on squeeze and lucid because of multi-arch (needs a newer cdbs)
        dist-filter: '(distribution!="squeeze") && (distribution!="lucid")'
        jobs:
                - git-packages

- project:
        name: python-argcomplete
        git-url: git://anonscm.debian.org/collab-maint/python-argcomplete.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: python-argh
        git-url: git://git.debian.org/collab-maint/python-argh.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project: # needed by wal-e
        name: python-azure
        bzr-branch: lp:~stub/ubuntu/trusty/python-azure/trunk
        # needs dh-python
        dist-filter: '(distribution!="squeeze") && (distribution!="lucid") && (distribution!="precise")'
        jobs:
                - bzr-packages-lp

- project:
        name: q3c
        git-url: https://alioth.debian.org/anonscm/git/debian-science/packages/q3c.git
        git-branch: master
        dist-filter: ''
        jobs:
                - git-packages

- project:
        name: repmgr
        git-url: git://git.debian.org/pkg-postgresql/repmgr.git
        git-branch: master
        # links to the wrong pg version on lucid
        dist-filter: 'distribution!="lucid"'
        jobs:
                - git-packages

- project:
        name: repmgr2
        git-url: git://git.debian.org/pkg-postgresql/repmgr2.git
        git-branch: master
        # links to the wrong pg version on lucid
        dist-filter: 'distribution!="lucid"'
        jobs:
                - git-packages

- project:
        name: skytools
        git-url: git://anonscm.debian.org/pkg-postgresql/skytools.git
        git-branch: master
        # fails on lucid (no dh_python2)
        dist-filter: 'distribution!="lucid"'
        jobs:
                - git-packages

- project:
        name: skytools3
        git-url: git://anonscm.debian.org/pkg-postgresql/skytools3.git
        git-branch: debian
        # fails on lucid
        dist-filter: 'distribution!="lucid"'
        jobs:
                - git-packages

- project:
        name: slony1-2
        git-url: git://anonscm.debian.org/pkg-postgresql/slony1-2.git
        git-branch: master
        # lucid doesn't have Dpkg/BuildFlags.pm
        dist-filter: 'distribution!="lucid"'
        jobs:
                - git-packages

- project:
        name: wal-e
        bzr-branch: lp:~stub/ubuntu/trusty/wal-e/trunk
        # needs python-swiftclient
        dist-filter: '(distribution!="squeeze") && (distribution!="wheezy") && (distribution!="lucid") && (distribution!="precise")'
        jobs:
                - bzr-packages-lp

- project:
        name: upgrade-8.4-9.4
        oldversion: 8.4
        newversion: 9.4
        jobs:
                - upgrade-job

- project:
        name: upgrade-9.1-9.2
        oldversion: 9.1
        newversion: 9.2
        jobs:
                - upgrade-job

- project:
        name: upgrade-9.1-9.3
        oldversion: 9.1
        newversion: 9.3
        jobs:
                - upgrade-job

- project:
        name: upgrade-9.2-9.3
        oldversion: 9.2
        newversion: 9.3
        jobs:
                - upgrade-job

- project:
        name: upgrade-9.3-9.4
        oldversion: 9.3
        newversion: 9.4
        jobs:
                - upgrade-{oldversion}-{newversion}-sid-amd64
