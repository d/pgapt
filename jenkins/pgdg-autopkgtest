#!/bin/sh

# run autopkgtest in schroot

set -eu

PACKAGE="$1"
CHROOT="chroot:${distribution:=sid}-pgdg-${architecture:=amd64}-sbuild"

# read pgapt config
for dir in . .. /home/jenkins/jenkins/workspace/apt.postgresql.org /home/buildd/workspace/apt.postgresql.org; do
  test -f $dir/pgapt.conf || continue
  . $dir/pgapt.conf
  break
done
set_dist_vars $distribution

cd /
set -x

newpid-netns schroot -c $CHROOT -u root sh <<-EOF
	set -eu
	export PG_SUPPORTED_VERSIONS="${PG_SUPPORTED_VERSIONS:=pgdg}" # import from outer environment
	
	# make PG devel available if requested
	if [ "\$PG_SUPPORTED_VERSIONS" != "pgdg" ]; then
	  sed -i -e "s/main/main \$PG_SUPPORTED_VERSIONS/" /etc/apt/sources.list.d/pgdg.list
	fi
	case $PACKAGE in
	  postgresql-${PG_BETA_VERSION:-})
	    sed -i -e "s/main/main ${PG_BETA_VERSION:-}/" /etc/apt/sources.list.d/pgdg.list ;;
	  postgresql-${PG_DEVEL_VERSION:-})
	    sed -i -e "s/main/main ${PG_DEVEL_VERSION:-}/" /etc/apt/sources.list.d/pgdg.list ;;
	esac

	if [ "${BACKPORTS:-false}" != "false" ]; then
	  echo "${mirror_backports:-}" > /etc/apt/sources.list.d/backports.list
	  echo "Package: *" > /etc/apt/preferences.d/backports.pref
	  echo "Pin: release a=$distribution-backports" >> /etc/apt/preferences.d/backports.pref
	  echo "Pin-Priority: 500" >> /etc/apt/preferences.d/backports.pref
	fi
	
	( set -x; apt-get -y update; apt-get -y dist-upgrade )
	
	# convert list of supported versions to grep filter
	for ver in \$(/usr/share/postgresql-common/supported-versions); do
	  FILTER="\${FILTER:-} -e \$ver"
	done
	# find all binaries built from this source matching supported versions
	# (we need this because the source package will likely only list one)
	# libpgsql-9.3-asn1oid: original package name on trusty, filter out
	# postgis: old binaries still kept around
	# postgresql-9.6-repmgr-dbg: original package on stretch
	# python3-multicorn: conflicts with python-multicorn
	BINARIES=\$(cat /var/lib/apt/lists/*_Packages |
	  grep-dctrl --exact-match -S "$PACKAGE" --no-field-names -s Package |
	  egrep -v 'libpgsql-9.3-asn1oid|postgis-2.[123]|postgresql-9.6-repmgr-dbg|python3-multicorn' |
	  fgrep \$FILTER | sort -u)
	
	# skip PG devel tests if packages have not been built yet
	if [ "\$PG_SUPPORTED_VERSIONS" != "pgdg" ] && [ -z "\$BINARIES" ]; then
	  echo "No version \$PG_SUPPORTED_VERSIONS packages for $PACKAGE found, exiting"
	  exit 0
	fi
	
	if [ "\$PG_SUPPORTED_VERSIONS" != "pgdg" ]; then
	  BINARIES="\${BINARIES:-} postgresql-\$PG_SUPPORTED_VERSIONS postgresql-server-dev-\$PG_SUPPORTED_VERSIONS"
	fi
	
	if [ "\$BINARIES" ]; then
	  # prefer our packages over the base distro ones
	  ( set -x; apt-get install -t $distribution-pgdg-testing -y \$BINARIES )
	fi
	
	# run autopkgtest
	if [ -x /usr/bin/autopkgtest ]; then
	  ( set -x; autopkgtest "$PACKAGE" -- null ) || EXIT=\$?
	else
	  ( set -x; adt-run --apt-source "$PACKAGE" --- null ) || EXIT=\$?
	fi
	case \${EXIT:-0} in
	  2|8) exit 0 ;; # tests skipped / no tests in this package
	  *) exit \${EXIT:-0} ;;
	esac
EOF

