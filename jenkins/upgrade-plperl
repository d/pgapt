#!/bin/sh

set -eux

case ${distribution} in
	squeeze)
		PGVERSION="8.4"
		EXTENSION="LANGUAGE"
		OLDDIST="squeeze"
		OLDPERL="5.10"
		NEWDIST="wheezy"
		NEWPERL="5.14"
		;;
	wheezy)
		PGVERSION="9.1"
		EXTENSION="EXTENSION"
		OLDDIST="wheezy"
		OLDPERL="5.14"
		NEWDIST="sid"
		NEWPERL="5.18"
		;;
esac

if [ -f /etc/apt/sources.list.d/pgdg.list ]; then
	: "*** Removing pgdg sources.list"
	rm -f /etc/apt/sources.list.d/pgdg.list
	apt-get update
fi

if [ ! -f /usr/share/doc/postgresql-plperl-$PGVERSION/copyright ]; then
	: "*** Installing plperl"
	apt-get install -y postgresql-plperl-$PGVERSION
fi
dpkg -l 'postgresql*'

: "*** Creating PostgreSQL cluster"
trap "service postgresql stop; cat /var/log/postgresql/postgresql-$PGVERSION-main.log" 0 2 3 15
if ! [ -f /etc/postgresql/$PGVERSION/main/postgresql.conf ]; then
	export PGPORT=$(perl -le 'print 1024 + int(rand(64000))')
	pg_createcluster --port=$PGPORT --start-conf=auto $PGVERSION main
fi
service postgresql start
su -c "createuser --superuser $USER" postgres
export PGDATABASE="postgres"

: "*** Creating plperl functions"
psql <<EOF
CREATE $EXTENSION plperl;
CREATE OR REPLACE FUNCTION perl_version() RETURNS text AS
'return sprintf "%vd", $^V;' LANGUAGE plperl;
CREATE $EXTENSION plperlu;
CREATE OR REPLACE FUNCTION perl_versionu() RETURNS text AS
'return sprintf "%vd", $^V;' LANGUAGE plperlu;
EOF

: "*** Perl version on $OLDDIST is $OLDPERL"
psql -c 'SELECT perl_version()' | fgrep $OLDPERL
psql -c 'SELECT perl_versionu()' | fgrep $OLDPERL

: "*** Upgrading from $OLDDIST to $NEWDIST"
sed -i -e "s/$OLDDIST/$NEWDIST/g" -e '/security.*sid/d' /etc/apt/sources.list
case $NEWDIST in
	wheezy)
		echo "deb http://ftp.de.debian.org/debian wheezy-proposed-updates main" >> /etc/apt/sources.list
		;;
esac
apt-get update
apt-cache policy postgresql-plperl-$PGVERSION
apt-get install -y postgresql-plperl-$PGVERSION
dpkg -l 'postgresql*'

: "*** Restarting PostgreSQL (this should actually not be necessary)"
service postgresql restart

: "*** Perl version on $NEWDIST is $NEWPERL"
psql -c 'SELECT perl_version()' | fgrep $NEWPERL
psql -c 'SELECT perl_versionu()' | fgrep $NEWPERL
